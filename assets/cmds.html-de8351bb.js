import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c,d as o,e as i,a,b as n}from"./app-b2ced03b.js";const l={},u=i(`<h1 id="重构接收价格前置项目" tabindex="-1"><a class="header-anchor" href="#重构接收价格前置项目" aria-hidden="true">#</a> 重构接收价格前置项目</h1><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>没想到，重构这个项目的原因居然是公司开始不再使用 Tomcat 部署项目，想把之前的 war 包启动的项目都换成 jar 包部署。之前的前置项目大部分都都是“远古时期”流传下来的“毒瘤”，纯 Java 项目，各种 Thread 满天飞，规范什么的就更别提了，为了追赶上线进度，我们先使用了 tomcat-embed 模块实现 Java 内置 Tomcat 启动，核心代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> webappDirLocation <span class="token operator">=</span> <span class="token string">&quot;src/main/webapp&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Tomcat</span> tomcat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tomcat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tomcat<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tomcat<span class="token punctuation">.</span><span class="token function">addWebapp</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>webappDirLocation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tomcat<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tomcat<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然这样可以脱离 Tomcat 部署，但是肯定不是长远之计，所以重构的任务就落到了我的身上，其实在我看来这些老项目还是应该尽早维护，趁着了解业务的人都还在和项目并不复杂的时候，尽早规范统一起来才是正途。虽然这些前置项目平时都不是我负责，但是多多少少上线和联调的时候也都接触过，并说不上陌生，而且业务也不负责，话不多说直接开始。</p><h2 id="重构思路" tabindex="-1"><a class="header-anchor" href="#重构思路" aria-hidden="true">#</a> 重构思路</h2><h3 id="框架选型" tabindex="-1"><a class="header-anchor" href="#框架选型" aria-hidden="true">#</a> 框架选型</h3><p>价格接收转发前置项目，这是一个接收交易所价格并转发给多个后台的纯后台项目，几乎没有什么逻辑处理，就是是充当透传的作用，所以我们采用 Spring Boot 来选择重构。由于只是转发价格，并不作存储作用，所以我们并不会牵扯到数据持久化的问题，不会用到数据库。往后台项目推送价格有使用 MQ 交互的，也有用 Socket 通信的，MQ 这里我们只能使用公司在用的 IBM MQ，Socket 我们就继续原来使用了 Java 原生的 Socket 类实现。置于其他的知识点就放在下面一一介绍了。</p><h3 id="业务梳理" tabindex="-1"><a class="header-anchor" href="#业务梳理" aria-hidden="true">#</a> 业务梳理</h3><p>业务流程就是在工作日时将所需要的产品价格从交易所获取并转发给报价平台、K线平台和日终价格三个后台项目。</p><p>与交易所建立通讯之后，通过接口会一直受到价格，并且连接建立之后并不会主动断开，除非遇到网络等特殊情况，如果发生断联则触发重连策略。而所收到的价格并不是随时并且全部都发送，因为有些产品的价格是我们不需要的，但是又不确定对方发送的产品价格是固定的，所以我们将自己定义的工作日和所需产品价格。而所需数据的后台项目有新有旧，所以对接价格的接口实现还需要和后台一致。</p>`,11),r=a("h2",{id:"具体实现",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#具体实现","aria-hidden":"true"},"#"),n(" 具体实现")],-1),d=a("h3",{id:"_1-配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-配置","aria-hidden":"true"},"#"),n(" 1.配置")],-1);function k(h,m){const s=e("FlowChart");return p(),c("div",null,[u,o(s,{id:"flowchart-31",code:"eJwrLkksKrG1A1NWCk8nrH/ateLlwp3PZ6/jys9LtbXLL0gtSizJzM8DSm6Y+2L91Cc7+p7sWvJsxuRnnQ1Pd+96vrr7xf55z/qWcmUWO+fn5dnaJefnpWRCdDybsf7phGVoqoJT81JQVD3Zvf3Zgj0QtS/nNLxY1vi0f+LLhkaukqLEvOK01CJUV6zfCTTn6YS+p/0bnra3PV3SDlVdXJoE9EdpUlF+aUlmXirIMyA1z1d0P93Vz8UF9qGuHdBTII9pFGWmZ5Ro6tpBXA11vEZlarGOAkIK5FSYVF6+jkJJfgFQHGQERA5VPcy5cHfDLQG6igsACbWprw==",preset:"vue"}),r,d])}const f=t(l,[["render",k],["__file","cmds.html.vue"]]);export{f as default};
