const e=JSON.parse(`{"key":"v-323aff7a","path":"/study/persistence/sql.html","title":"SQL 百科","lang":"zh-CN","frontmatter":{"star":true,"category":"SQL","tag":["SQL","数据库"],"description":"SQL 百科 SQL 优化指南 简单语句 SQL 优化 1. 选择合适的数据类型及字符集 使用合适的数据类型可以减少存储空间和提高查询速度。这个可不能小看，数据量到达一个量级，这个就能看出明显差异。 对于布尔值使用 TINYINT(1) 而不是 CHAR(1) 比如你有一个字段是表示业务状态或者是类型。 对于仅存储英文的表，使用 latin1 而不是 utf8mb4。 2. 避免使用SELECT * 仅选择必要的列，减少数据传输量。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/persistence/sql.html"}],["meta",{"property":"og:site_name","content":"Baicheng's Blog"}],["meta",{"property":"og:title","content":"SQL 百科"}],["meta",{"property":"og:description","content":"SQL 百科 SQL 优化指南 简单语句 SQL 优化 1. 选择合适的数据类型及字符集 使用合适的数据类型可以减少存储空间和提高查询速度。这个可不能小看，数据量到达一个量级，这个就能看出明显差异。 对于布尔值使用 TINYINT(1) 而不是 CHAR(1) 比如你有一个字段是表示业务状态或者是类型。 对于仅存储英文的表，使用 latin1 而不是 utf8mb4。 2. 避免使用SELECT * 仅选择必要的列，减少数据传输量。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-15T06:47:35.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"SQL"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:modified_time","content":"2024-07-15T06:47:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL 百科\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-15T06:47:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"SQL 优化指南","slug":"sql-优化指南","link":"#sql-优化指南","children":[]},{"level":2,"title":"简单语句 SQL 优化","slug":"简单语句-sql-优化","link":"#简单语句-sql-优化","children":[{"level":3,"title":"1. 选择合适的数据类型及字符集","slug":"_1-选择合适的数据类型及字符集","link":"#_1-选择合适的数据类型及字符集","children":[]},{"level":3,"title":"2. 避免使用SELECT *","slug":"_2-避免使用select","link":"#_2-避免使用select","children":[]},{"level":3,"title":"3. 合理使用JOIN、避免子查询","slug":"_3-合理使用join、避免子查询","link":"#_3-合理使用join、避免子查询","children":[]},{"level":3,"title":"4. 使用UNION代替OR","slug":"_4-使用union代替or","link":"#_4-使用union代替or","children":[]},{"level":3,"title":"5. 优化 ORDER BY 和 GROUP BY","slug":"_5-优化-order-by-和-group-by","link":"#_5-优化-order-by-和-group-by","children":[]},{"level":3,"title":"6. 避免使用%开头的LIKE查询","slug":"_6-避免使用-开头的like查询","link":"#_6-避免使用-开头的like查询","children":[]},{"level":3,"title":"7. 使用索引","slug":"_7-使用索引","link":"#_7-使用索引","children":[]}]},{"level":2,"title":"正确使用索引","slug":"正确使用索引","link":"#正确使用索引","children":[{"level":3,"title":"1. 在常用查询条件和连接条件的列上建立索引","slug":"_1-在常用查询条件和连接条件的列上建立索引","link":"#_1-在常用查询条件和连接条件的列上建立索引","children":[]},{"level":3,"title":"2. 遵循最左前缀原则","slug":"_2-遵循最左前缀原则","link":"#_2-遵循最左前缀原则","children":[]},{"level":3,"title":"3. 避免在索引列上进行计算","slug":"_3-避免在索引列上进行计算","link":"#_3-避免在索引列上进行计算","children":[]},{"level":3,"title":"4. 更新频繁的列慎用索引","slug":"_4-更新频繁的列慎用索引","link":"#_4-更新频繁的列慎用索引","children":[]}]},{"level":2,"title":"DBMS 配置优化","slug":"dbms-配置优化","link":"#dbms-配置优化","children":[{"level":3,"title":"调整innodb_buffer_pool_size","slug":"调整innodb-buffer-pool-size","link":"#调整innodb-buffer-pool-size","children":[]},{"level":3,"title":"调整query_cache_size","slug":"调整query-cache-size","link":"#调整query-cache-size","children":[]},{"level":3,"title":"调整thread_cache_size","slug":"调整thread-cache-size","link":"#调整thread-cache-size","children":[]},{"level":3,"title":"调整table_open_cache","slug":"调整table-open-cache","link":"#调整table-open-cache","children":[]},{"level":3,"title":"调整tmp_table_size和max_heap_table_size","slug":"调整tmp-table-size和max-heap-table-size","link":"#调整tmp-table-size和max-heap-table-size","children":[]},{"level":3,"title":"调整innodb_flush_log_at_trx_commit","slug":"调整innodb-flush-log-at-trx-commit","link":"#调整innodb-flush-log-at-trx-commit","children":[]},{"level":3,"title":"调整innodb_log_file_size","slug":"调整innodb-log-file-size","link":"#调整innodb-log-file-size","children":[]},{"level":3,"title":"调整innodb_log_buffer_size","slug":"调整innodb-log-buffer-size","link":"#调整innodb-log-buffer-size","children":[]},{"level":3,"title":"调整innodb_io_capacity","slug":"调整innodb-io-capacity","link":"#调整innodb-io-capacity","children":[]},{"level":3,"title":"调整max_connections","slug":"调整max-connections","link":"#调整max-connections","children":[]},{"level":3,"title":"调整sort_buffer_size","slug":"调整sort-buffer-size","link":"#调整sort-buffer-size","children":[]},{"level":3,"title":"调整read_buffer_size","slug":"调整read-buffer-size","link":"#调整read-buffer-size","children":[]}]}],"git":{"createdTime":1721026055000,"updatedTime":1721026055000,"contributors":[{"name":"songbaicheng","email":"songbaicheng16@163.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1042},"filePathRelative":"study/persistence/sql.md","localizedDate":"2024年7月15日","excerpt":"<h1> SQL 百科</h1>\\n<h2> SQL 优化指南</h2>\\n<h2> 简单语句 SQL 优化</h2>\\n<h3> 1. 选择合适的数据类型及字符集</h3>\\n<p>使用合适的数据类型可以减少存储空间和提高查询速度。这个可不能小看，数据量到达一个量级，这个就能看出明显差异。</p>\\n<ul>\\n<li>对于布尔值使用 TINYINT(1) 而不是 CHAR(1) 比如你有一个字段是表示业务状态或者是类型。</li>\\n<li>对于仅存储英文的表，使用 latin1 而不是 utf8mb4。</li>\\n</ul>\\n<h3> 2. 避免使用SELECT *</h3>\\n<p>仅选择必要的列，减少数据传输量。</p>","autoDesc":true}`);export{e as data};
