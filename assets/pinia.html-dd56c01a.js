const e=JSON.parse(`{"key":"v-cc79568a","path":"/study/frontend/framework/pinia.html","title":"Pinia","lang":"zh-CN","frontmatter":{"category":"前端","tag":["Pinia"],"description":"Pinia 关于 Pinia 和 Vuex Pinia 最初是为了探索 Vuex 的下一次迭代会是什么样子，结合了 Vuex 5 核心团队讨论中的许多想法。最终，我们意识到 Pinia 已经实现了我们在 Vuex 5 中想要的大部分内容，并决定实现它 取而代之的是新的建议。 与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/frontend/framework/pinia.html"}],["meta",{"property":"og:site_name","content":"Baicheng's Blog"}],["meta",{"property":"og:title","content":"Pinia"}],["meta",{"property":"og:description","content":"Pinia 关于 Pinia 和 Vuex Pinia 最初是为了探索 Vuex 的下一次迭代会是什么样子，结合了 Vuex 5 核心团队讨论中的许多想法。最终，我们意识到 Pinia 已经实现了我们在 Vuex 5 中想要的大部分内容，并决定实现它 取而代之的是新的建议。 与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T10:03:38.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"Pinia"}],["meta",{"property":"article:modified_time","content":"2023-08-22T10:03:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pinia\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-22T10:03:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"关于 Pinia 和 Vuex","slug":"关于-pinia-和-vuex","link":"#关于-pinia-和-vuex","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"引入 Pinia","slug":"引入-pinia","link":"#引入-pinia","children":[]},{"level":3,"title":"定义 Store","slug":"定义-store","link":"#定义-store","children":[]},{"level":3,"title":"使用 Store","slug":"使用-store","link":"#使用-store","children":[]}]}],"git":{"createdTime":1688577096000,"updatedTime":1692698618000,"contributors":[{"name":"songbaicheng","email":"2524218694@qq.com","commits":3}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"study/frontend/framework/pinia.md","localizedDate":"2023年7月5日","excerpt":"<h1> Pinia</h1>\\n<h2> 关于 Pinia 和 Vuex</h2>\\n<p>Pinia 最初是为了探索 Vuex 的下一次迭代会是什么样子，结合了 Vuex 5 核心团队讨论中的许多想法。最终，我们意识到 Pinia 已经实现了我们在 Vuex 5 中想要的大部分内容，并决定实现它 取而代之的是新的建议。</p>\\n<p>与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。</p>\\n","autoDesc":true}`);export{e as data};
