import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as r}from"./app-fb53f143.js";const t="/assets/images/study/computer-basis/ads/data-structure/queue/queue.jpg",d={},h=r('<h1 id="队列" tabindex="-1"><a class="header-anchor" href="#队列" aria-hidden="true">#</a> 队列</h1><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><p>队列简称队，也是一种操作受限的线性表，只允许在表的一端进行插入，而在表的另一端进行删除。向队列中插入元素称为入队或进队；删除元素称为出队或离队。特性是最早进队的也是最早出队的，即先进先出（FIFO， First In First Out）。</p><figure><img src="'+t+'" alt="队列示意图" tabindex="0" loading="lazy"><figcaption>队列示意图</figcaption></figure><ul><li>队头（Front）：允许删除的一端，又称队首。</li><li>队尾（Rear）：允许插入的一端。</li><li>空队列：不包含任何元素的空表。</li></ul><h2 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作" aria-hidden="true">#</a> 基础操作</h2><ul><li>InitQueue：初始化队列，构造一个空队列。</li><li>QueueEmpty：判队列空。</li><li>EnQueue：入队。</li><li>DeQueue：出队。</li><li>GetHead：读队头元素。</li></ul><h2 id="队列的顺序存储" tabindex="-1"><a class="header-anchor" href="#队列的顺序存储" aria-hidden="true">#</a> 队列的顺序存储</h2><h3 id="循环队列" tabindex="-1"><a class="header-anchor" href="#循环队列" aria-hidden="true">#</a> 循环队列</h3><h2 id="队列的链式存储" tabindex="-1"><a class="header-anchor" href="#队列的链式存储" aria-hidden="true">#</a> 队列的链式存储</h2><h2 id="双端队列" tabindex="-1"><a class="header-anchor" href="#双端队列" aria-hidden="true">#</a> 双端队列</h2>',11),n=[h];function s(l,u){return a(),i("div",null,n)}const f=e(d,[["render",s],["__file","queue.html.vue"]]);export{f as default};
