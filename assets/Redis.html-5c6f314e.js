const e=JSON.parse(`{"key":"v-1fbb484d","path":"/study/persistence/Redis.html","title":"Redis","lang":"zh-CN","frontmatter":{"star":true,"category":"持久化","tag":["Redis","database"],"description":"Redis Redis (Remote Dictionary Server) 是一个开源的内存数据结构存储，用作数据库、缓存和消息代理。它支持多种数据结构，如字符串（strings）、哈希（hashes）、列表（lists）、集合（sets）以及有序集合（sorted sets）。因为具有丰富的功能和高性能，现在几乎主流的 Web 项目都已经绑定了 Redis 作为缓存组件。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/persistence/Redis.html"}],["meta",{"property":"og:site_name","content":"Baicheng's Blog"}],["meta",{"property":"og:title","content":"Redis"}],["meta",{"property":"og:description","content":"Redis Redis (Remote Dictionary Server) 是一个开源的内存数据结构存储，用作数据库、缓存和消息代理。它支持多种数据结构，如字符串（strings）、哈希（hashes）、列表（lists）、集合（sets）以及有序集合（sorted sets）。因为具有丰富的功能和高性能，现在几乎主流的 Web 项目都已经绑定了 Redis 作为缓存组件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-15T16:30:13.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"database"}],["meta",{"property":"article:modified_time","content":"2024-07-15T16:30:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-15T16:30:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"为什么 Redis 那么快","slug":"为什么-redis-那么快","link":"#为什么-redis-那么快","children":[]},{"level":3,"title":"为什么选择单线程","slug":"为什么选择单线程","link":"#为什么选择单线程","children":[]},{"level":3,"title":"Redis 真的是单线程的吗？","slug":"redis-真的是单线程的吗","link":"#redis-真的是单线程的吗","children":[]},{"level":3,"title":"为什么要给缓存数据设置过期时间","slug":"为什么要给缓存数据设置过期时间","link":"#为什么要给缓存数据设置过期时间","children":[]},{"level":3,"title":"Redis 如何判断数据是否过期","slug":"redis-如何判断数据是否过期","link":"#redis-如何判断数据是否过期","children":[]},{"level":3,"title":"Redis 删除策略","slug":"redis-删除策略","link":"#redis-删除策略","children":[]},{"level":3,"title":"大量 key 集中过期问题","slug":"大量-key-集中过期问题","link":"#大量-key-集中过期问题","children":[]}]},{"level":2,"title":"理论场景","slug":"理论场景","link":"#理论场景","children":[]},{"level":2,"title":"实际场景","slug":"实际场景","link":"#实际场景","children":[{"level":3,"title":"缓存","slug":"缓存","link":"#缓存","children":[]},{"level":3,"title":"布隆过滤器","slug":"布隆过滤器","link":"#布隆过滤器","children":[]},{"level":3,"title":"Redis 与数据库读写一致性","slug":"redis-与数据库读写一致性","link":"#redis-与数据库读写一致性","children":[]},{"level":3,"title":"2. 先写 Redis，再写 MySQL","slug":"_2-先写-redis-再写-mysql","link":"#_2-先写-redis-再写-mysql","children":[]},{"level":3,"title":"3. 先删除 Redis，再写 MySQL","slug":"_3-先删除-redis-再写-mysql","link":"#_3-先删除-redis-再写-mysql","children":[]},{"level":3,"title":"4. 先写 MySQL，再删除 Redis","slug":"_4-先写-mysql-再删除-redis","link":"#_4-先写-mysql-再删除-redis","children":[]},{"level":3,"title":"5. 先删除 Redis，再写 MySQL，再删除 Redis","slug":"_5-先删除-redis-再写-mysql-再删除-redis","link":"#_5-先删除-redis-再写-mysql-再删除-redis","children":[]},{"level":3,"title":"6. 先写 MySQL，通过 Binlog，异步更新 Redis","slug":"_6-先写-mysql-通过-binlog-异步更新-redis","link":"#_6-先写-mysql-通过-binlog-异步更新-redis","children":[]}]}],"git":{"createdTime":1688349708000,"updatedTime":1721061013000,"contributors":[{"name":"songbaicheng","email":"songbaicheng16@163.com","commits":7},{"name":"songbaicheng","email":"2524218694@qq.com","commits":2}]},"readingTime":{"minutes":10.46,"words":3138},"filePathRelative":"study/persistence/Redis.md","localizedDate":"2023年7月3日","excerpt":"<h1> Redis</h1>\\n<p>Redis (Remote Dictionary Server) 是一个开源的内存数据结构存储，用作数据库、缓存和消息代理。它支持多种数据结构，如字符串（strings）、哈希（hashes）、列表（lists）、集合（sets）以及有序集合（sorted sets）。因为具有丰富的功能和高性能，现在几乎主流的 Web 项目都已经绑定了 Redis 作为缓存组件。</p>\\n","autoDesc":true}`);export{e as data};
