const e=JSON.parse(`{"key":"v-705e992c","path":"/study/backend/code-trick.html","title":"代码规范与技巧","lang":"zh-CN","frontmatter":{"star":true,"category":"代码技巧","tag":["Java"],"description":"代码规范与技巧 好的代码就是注释。 1. 规范命名 关于命名规范的问题这里我不是建议，而是要求大家真的要遵守《阿里巴巴 Java 开发手册》，因为不规范的命名简直是一个项目的本质性的灾难。在规范的第一章就列举了各个场景命名的规范，可见其重要性。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/backend/code-trick.html"}],["meta",{"property":"og:site_name","content":"Baicheng's Blog"}],["meta",{"property":"og:title","content":"代码规范与技巧"}],["meta",{"property":"og:description","content":"代码规范与技巧 好的代码就是注释。 1. 规范命名 关于命名规范的问题这里我不是建议，而是要求大家真的要遵守《阿里巴巴 Java 开发手册》，因为不规范的命名简直是一个项目的本质性的灾难。在规范的第一章就列举了各个场景命名的规范，可见其重要性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T08:49:32.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-27T08:49:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码规范与技巧\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-27T08:49:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 规范命名","slug":"_1-规范命名","link":"#_1-规范命名","children":[]},{"level":2,"title":"2. 方法别太长","slug":"_2-方法别太长","link":"#_2-方法别太长","children":[]},{"level":2,"title":"3. 多用 return","slug":"_3-多用-return","link":"#_3-多用-return","children":[]},{"level":2,"title":"4. if 条件表达式不要太复杂","slug":"_4-if-条件表达式不要太复杂","link":"#_4-if-条件表达式不要太复杂","children":[]},{"level":2,"title":"5. 优雅地参数校验","slug":"_5-优雅地参数校验","link":"#_5-优雅地参数校验","children":[]},{"level":2,"title":"6. 统一返回体结构","slug":"_6-统一返回体结构","link":"#_6-统一返回体结构","children":[]},{"level":2,"title":"7. 统一异常处理","slug":"_7-统一异常处理","link":"#_7-统一异常处理","children":[]},{"level":2,"title":"8. 尽量不传递 null","slug":"_8-尽量不传递-null","link":"#_8-尽量不传递-null","children":[]},{"level":2,"title":"9. 类和方法单一职责","slug":"_9-类和方法单一职责","link":"#_9-类和方法单一职责","children":[]},{"level":2,"title":"10. 尽量使用聚合/组合代替继承","slug":"_10-尽量使用聚合-组合代替继承","link":"#_10-尽量使用聚合-组合代替继承","children":[]},{"level":2,"title":"11. 使用线程池代替手动创建线程","slug":"_11-使用线程池代替手动创建线程","link":"#_11-使用线程池代替手动创建线程","children":[]},{"level":2,"title":"12. 减小锁的范围","slug":"_12-减小锁的范围","link":"#_12-减小锁的范围","children":[]},{"level":2,"title":"13. 有类型区分时定义好枚举","slug":"_13-有类型区分时定义好枚举","link":"#_13-有类型区分时定义好枚举","children":[]},{"level":2,"title":"14. 使用 StringBuilder 进行字符串拼接","slug":"_14-使用-stringbuilder-进行字符串拼接","link":"#_14-使用-stringbuilder-进行字符串拼接","children":[]},{"level":2,"title":"15. 不循环调用数据库","slug":"_15-不循环调用数据库","link":"#_15-不循环调用数据库","children":[]}],"git":{"createdTime":1716286281000,"updatedTime":1716799772000,"contributors":[{"name":"songbaicheng","email":"songbaicheng16@163.com","commits":2}]},"readingTime":{"minutes":5.76,"words":1729},"filePathRelative":"study/backend/code-trick.md","localizedDate":"2024年5月21日","excerpt":"<h1> 代码规范与技巧</h1>\\n<p>好的代码就是注释。</p>\\n<h2> 1. 规范命名</h2>\\n<p>关于命名规范的问题这里我不是建议，而是要求大家真的要遵守《阿里巴巴 Java 开发手册》，因为不规范的命名简直是一个项目的本质性的灾难。在规范的第一章就列举了各个场景命名的规范，可见其重要性。</p>\\n","autoDesc":true}`);export{e as data};
