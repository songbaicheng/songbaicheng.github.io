import{_ as k}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as d,d as t,w as a,n as m,g as v,e as l,a as n,b as s}from"./app-fb53f143.js";const b={},h=l('<h1 id="代码覆盖率-mockito" tabindex="-1"><a class="header-anchor" href="#代码覆盖率-mockito" aria-hidden="true">#</a> 代码覆盖率 Mockito</h1><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>刚开始工作的时候谁写测试类啊，还单元测试呢，测试我都不测试。后来到了正式一些的公司之后，你测试覆盖率不过都不能上线，所以 JaCoCo 这个开源的Java代码覆盖率工具就发挥作用了，它可以衡量测试套件对代码的覆盖程度、帮助开发团队分析测试覆盖率，并且了解哪些代码已经被测试覆盖，以及哪些代码尚未被测试覆盖。虽然 jaCoCo 很强，但是你的测试工具类得保证你的代码都可以覆盖的到，于是 Mockito 又出现了，相对于 Junit 它提供了简洁的API，使得在单元测试中创建模拟对象、定义模拟对象的行为以及验证方法的调用变得非常容易。</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h3>',5),g=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.mockito"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("mockito-core"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("scope")]),n("span",{class:"token punctuation"},">")]),s("test"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("scope")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-gradle line-numbers-mode","data-ext":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[s("testImplementation "),n("span",{class:"token string"},"'org.mockito:mockito-core:<version>'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),y=n("h3",{id:"测试代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#测试代码","aria-hidden":"true"},"#"),s(" 测试代码")],-1),U=n("p",null,"Mockito 与多种测试框架（如JUnit、TestNG）和依赖注入框架（如Spring）完美集成，所以我们就用最常用的 Spring Boot 代码进行测试。",-1),w=n("p",null,"首先我们先准备好要测试的方法类，内容也是非常的简单，无非是包含了关于用户的 crud 功能。",-1),M=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Builder"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" username"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Repository"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"User"),s(" user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Service"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserService"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(" userMapper"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"User"),s(" user"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        userMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        userMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("p",null,"接下来就是写测试类了，我们这里需要依赖 Spring 容器测试，所以我们结合 @SpringBootTest 启动，而具体的测试方法也根据",-1),B=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootTest"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserServiceTest"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@MockBean"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(" userMapper"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"UserService"),s(" userService"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" expectedUsers "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),s(`
              `),n("span",{class:"token class-name"},"UserVo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"builder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"username"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"zhangsan"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
              `),n("span",{class:"token class-name"},"UserVo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"builder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"username"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"lisi"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),s("expectedUsers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" actualUsers "),n("span",{class:"token operator"},"="),s(" userService"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),s("expectedUsers"),n("span",{class:"token punctuation"},","),s(" actualUsers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"User"),s(" expectedUser "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),s("expectedUser"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"User"),s(" actualUser "),n("span",{class:"token operator"},"="),s(" userService"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),s("expectedUser"),n("span",{class:"token punctuation"},","),s(" actualUser"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testSaveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"User"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testDeleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        
        userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetUserById_NonExistingUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertThrows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"UserNotFoundException"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
            userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testSaveUser_NullUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"assertThrows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IllegalArgumentException"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
            userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"never"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ArgumentMatchers"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"any"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=l(`<h2 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法" aria-hidden="true">#</a> 常用方法</h2><h3 id="mock-class-t-classtomock" tabindex="-1"><a class="header-anchor" href="#mock-class-t-classtomock" aria-hidden="true">#</a> mock(Class&lt;<em>T</em>&gt; classToMock)</h3><p>创建一个模拟对象，用于代替真实对象的行为。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserService</span> userServiceMock <span class="token operator">=</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="when-mock-method-thenreturn-value" tabindex="-1"><a class="header-anchor" href="#when-mock-method-thenreturn-value" aria-hidden="true">#</a> when(mock.method()).thenReturn(value)</h3><p>定义模拟对象方法的行为，指定当调用方法时应该返回的值。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 定义当调用 getUserById 方法并传入参数 1 时，返回一个名为 &quot;zhangsan&quot; 的 User 对象</span>
<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token class-name">UserVo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify-mock-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-method" aria-hidden="true">#</a> verify(mock).method()</h3><p>验证模拟对象的方法是否被调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法是否被调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify-mock-times-n-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-times-n-method" aria-hidden="true">#</a> verify(mock, times(n)).method()</h3><p>验证模拟对象的方法被调用了特定的次数（n）。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法被调用了2次</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">times</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify-mock-atleast-n-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-atleast-n-method" aria-hidden="true">#</a> verify(mock, atLeast(n)).method()</h3><p>验证模拟对象的方法被调用了至少n次。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法被调用了至少3次</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">atLeast</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify-mock-never-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-never-method" aria-hidden="true">#</a> verify(mock, never()).method()</h3><p>验证模拟对象的方法从未被调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 addUser 方法从未被调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verifynomoreinteractions-mock" tabindex="-1"><a class="header-anchor" href="#verifynomoreinteractions-mock" aria-hidden="true">#</a> verifyNoMoreInteractions(mock)</h3><p>验证模拟对象上的所有方法已经被验证，并且没有其他未验证的方法调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 userServiceMock 上的所有方法已经被验证，并且没有其他未验证的方法调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verifyNoMoreInteractions</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dothrow-exception-when-mock-method" tabindex="-1"><a class="header-anchor" href="#dothrow-exception-when-mock-method" aria-hidden="true">#</a> doThrow(exception).when(mock).method()</h3><p>指定当调用模拟对象的方法时应该抛出的异常。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 指定当调用 deleteUser 方法并传入任何参数时，抛出一个名为&quot;UserNotFoundException&quot;的异常</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">doThrow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserNotFoundException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">anyInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="doanswer-answer-when-mock-method" tabindex="-1"><a class="header-anchor" href="#doanswer-answer-when-mock-method" aria-hidden="true">#</a> doAnswer(answer).when(mock).method()</h3><p>指定模拟对象方法的调用应该如何进行自定义处理，例如执行回调函数或返回动态计算的结果。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 定义当调用 updateUser 方法时，执行自定义的逻辑来修改用户对象</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">doAnswer</span><span class="token punctuation">(</span>invocation <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> userToUpdate <span class="token operator">=</span> invocation<span class="token punctuation">.</span><span class="token function">getArgument</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 执行自定义逻辑来更新用户对象</span>
    userToUpdate<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Updated Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userToUpdate<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Mockito 还提供了其他一些高级功能和方法，例如参数匹配、顺序验证、超时验证等，如果想了解更多可以查阅下面的 Mockito的官方文档。</p>`,30);function _(A,T){const u=o("CodeTabs"),p=o("CodeDemo"),i=o("VPCard");return r(),d("div",null,[h,t(u,{id:"15",data:[{id:"Maven"},{id:"Gradle"}]},{title0:a(({value:e,isActive:c})=>[s("Maven")]),title1:a(({value:e,isActive:c})=>[s("Gradle")]),tab0:a(({value:e,isActive:c})=>[g]),tab1:a(({value:e,isActive:c})=>[f]),_:1}),y,U,w,t(p,{id:"code-demo-32",type:"normal",title:"%E5%BE%85%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95",code:"eJyFjk0KgzAQRq8yuLKbHqAtRbsT2pV05yY1g6SEKPkrRbx7HSMSQeoQyIS8ed/0yZt5lpySrETtRY2V6txLihpqyYyBp0E9/0BfqUrBWFnubPsRGnl4d1p4ZhEKoh+s61CDW9pzgGY0yO/C2AvRV2jQ5lJSb9IDZRBGpdE6rSLRcYXO2mHDTgR56b59C56WVgvVgOD7AcvMCP+J8K3gYJhH4tMpkDwrfyReyAna83KUaAO/vXlkjtjVxuNJhh/z/p0V"},{default:a(()=>[M,x,I]),_:1}),S,t(p,{id:"code-demo-40",type:"normal",title:"%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%BB%A3%E7%A0%81",code:"eJytVU2P0zAQ/StRTolUIsGRj9W2oqAi2gNdOFVamWRoDV672E7asup/Z8ZJE6ebpgSwKtWxZ57nvTdOHsPvrGDhy/B2udVcridK2TswdiVTwYwJPhvQS9AFT4GWg8eVXMkAx+1cpT8mwKpHTC6YhWBGCXO23YIO8nr6qsoZ51btuIasneQd4pKqOWZVeWVFNC0UzwKLj+/BjoWgTBPFVBbt0vjIjX1N6zcB7LeQWshcVPAmGGvNDiZhhmKiJqUcFPVFJV9zLjLQUZxQKZI9QLQKf22YXBskG8YJz3DhOc1caBSPhiAJbniN8qIbJa70otHMSHBuVbLbgIwabZO1r0ScWNz+BDbXMmrx7wb11GKpzVmJg1p5PrRP6ITBVgFtpz8RwLSPHfm4fvKJTgGafzt4hOLO847lX29DUMbkMEMx/YZYWmpsR2iWITNnnlcIZbVaBWMk7Ny6K2uWjTDpg9qQ/UOtqWsqkS4b1I3s6mkUfGrMOf4we3x3/tycC2detWjJCnCqtvxxvAjJ192ZdE12XwpzwqbFfpc6SHVmX+XzFgTYDkbXOq6bQdag9XnZw+IiwpDLc79QcrrH1wJS+Bdqf3snZC5EXxffbbTamYgwFsq+U7nMpvsUtpYrmbiP1ijAmp/d+GWfa91/cY6Dlf8Pl+J+gcSfCt4iPRMC1kyM9Tp/AGmH8677/FzloZRH9ZYE3KQPT419Km/ObLrBd3jC5AEDGkHwFx5/A2b1qCc="},{default:a(()=>[B]),_:1}),j,t(i,m(v({title:"Mockito 官网文档",desc:"点击跳转官网查看详细内容",logo:"/assets/images/work-task/development/mockito/mockito.png",link:"https://site.mockito.org/",color:"rgba(173, 216, 590, 0.15)"})),null,16)])}const q=k(b,[["render",_],["__file","mockito.html.vue"]]);export{q as default};
