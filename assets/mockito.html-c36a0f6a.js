import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as d,d as r,w as s,e as p,b as n,a}from"./app-cf24a63d.js";const u={},k=p('<h1 id="代码覆盖率-mockito" tabindex="-1"><a class="header-anchor" href="#代码覆盖率-mockito" aria-hidden="true">#</a> 代码覆盖率 Mockito</h1><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>刚开始工作的时候谁写测试类啊，还单元测试呢，测试我都不测试。后来到了正式一些的公司之后，你测试覆盖率不过都不能上线，所以 JaCoCo 这个开源的Java代码覆盖率工具就发挥作用了，它可以衡量测试套件对代码的覆盖程度、帮助开发团队分析测试覆盖率，并且了解哪些代码已经被测试覆盖，以及哪些代码尚未被测试覆盖。虽然 jaCoCo 很强，但是你的测试工具类得保证你的代码都可以覆盖的到，于是 Mockito 又出现了，相对于 Junit 它提供了简洁的API，使得在单元测试中创建模拟对象、定义模拟对象的行为以及验证方法的调用变得非常容易。</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h3>',5),m=a("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[a("pre",{class:"language-xml"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("dependency")]),a("span",{class:"token punctuation"},">")]),n(`
    `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("groupId")]),a("span",{class:"token punctuation"},">")]),n("org.mockito"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("groupId")]),a("span",{class:"token punctuation"},">")]),n(`
    `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("artifactId")]),a("span",{class:"token punctuation"},">")]),n("mockito-core"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("artifactId")]),a("span",{class:"token punctuation"},">")]),n(`
    `),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("scope")]),a("span",{class:"token punctuation"},">")]),n("test"),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("scope")]),a("span",{class:"token punctuation"},">")]),n(`
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"</"),n("dependency")]),a("span",{class:"token punctuation"},">")]),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),h=a("div",{class:"language-gradle line-numbers-mode","data-ext":"gradle"},[a("pre",{class:"language-gradle"},[a("code",null,[n("testImplementation "),a("span",{class:"token string"},"'org.mockito:mockito-core:<version>'"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1);function g(v,_){const o=i("CodeTabs");return l(),d("div",null,[k,r(o,{id:"15",data:[{id:"Maven"},{id:"Gradle"}]},{title0:s(({value:e,isActive:t})=>[n("Maven")]),title1:s(({value:e,isActive:t})=>[n("Gradle")]),tab0:s(({value:e,isActive:t})=>[m]),tab1:s(({value:e,isActive:t})=>[h]),_:1})])}const x=c(u,[["render",g],["__file","mockito.html.vue"]]);export{x as default};
