import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as r,c as i,d as t,n as d,g as l,e as a}from"./app-a77ff25b.js";const c={},h=a('<h1 id="arthas-阿尔萨斯" tabindex="-1"><a class="header-anchor" href="#arthas-阿尔萨斯" aria-hidden="true">#</a> Arthas（阿尔萨斯)</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Arthas 是阿里提供的一款线上监控诊断产品，通过全局视角实时查看应用 load、内存、gc、线程的状态信息，并能在不修改应用代码的情况下，对业务问题进行诊断，包括查看方法调用的出入参、异常，监测方法执行耗时，类加载信息等，大大提升线上问题排查效率。</p><p>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决：</p><ol><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到 JVM 的实时运行状态？</li><li>怎么快速定位应用的热点，生成火焰图？</li><li>怎样直接从 JVM 内查找某个类的实例？</li></ol>',5),o=a(`<h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 第一种方法就是下载 arthas-boot 包进行启动</span>
<span class="token function">curl</span> <span class="token parameter variable">-O</span> https://arthas.aliyun.com/arthas-boot.jar
<span class="token function">java</span> <span class="token parameter variable">-jar</span> arthas-boot.jar

<span class="token comment"># 不过个人在启动时发现上述下载方式会提示缺少依赖而报错</span>
<span class="token comment"># 于是离线或者条件允许的情况下可以去下载完整包</span>
<span class="token comment"># https://github.com/alibaba/arthas/releases</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 如果下载的完整包解压后目录也会出现 arthas-boot.jar </span>
<span class="token function">java</span> <span class="token parameter variable">-jar</span> arthas-boot.jar

<span class="token comment"># 紧随其后就会生成当前用户下启动的 java 程序，选择序号后执行就进入了目标进程</span>
<span class="token comment"># 在进入目标进程后，输入dashboard，按回车/enter，会展示当前进程的信息，按ctrl+c可以中断执行。</span>
dashboard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="退出" tabindex="-1"><a class="header-anchor" href="#退出" aria-hidden="true">#</a> 退出</h3><p>如果只是退出当前的连接，可以用 quit 或者 exit 命令。Attach 到目标进程上的 arthas 还会继续运行，端口会保持开放，下次连接时可以直接连接上。如果想完全退出 arthas，可以执行stop命令。</p><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><h3 id="dashboard" tabindex="-1"><a class="header-anchor" href="#dashboard" aria-hidden="true">#</a> dashboard</h3><p>显示当前系统的实时数据面板，按 ctrl+c 退出，可以通过 i 来指定刷新时间，默认是 5 毫秒刷新一次，可以通过 n 来指定刷新次数。</p><h3 id="jad" tabindex="-1"><a class="header-anchor" href="#jad" aria-hidden="true">#</a> jad</h3><p>反编译指定已加载类的源码。</p>`,12);function p(m,u){const e=n("VPCard");return r(),i("div",null,[h,t(e,d(l({title:"Arthas 官网",desc:"点击跳转官网查看详细内容",logo:"/assets/images/study/maintenance/arthas/arthas.png",link:"https://arthas.aliyun.com/",color:"rgba(173, 216, 590, 0.15)"})),null,16),o])}const f=s(c,[["render",p],["__file","arthas.html.vue"]]);export{f as default};
