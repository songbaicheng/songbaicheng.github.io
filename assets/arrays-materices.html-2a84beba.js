const t=JSON.parse(`{"key":"v-8ed0d54a","path":"/study/computer-basis/ads/data-structure/arrays-materices.html","title":"数组和特殊矩阵","lang":"zh-CN","frontmatter":{"star":true,"category":"数据结构","tag":["arrays","matrices"],"description":"数组和特殊矩阵 矩阵在数据结构中考虑的是如何用最小的内存空间来存储同样的一组数据，所以我们应该把精力放在如何将矩阵更有效的存储在内存中，并能更方便的提取矩阵中的元素。通常矩阵在计算机语言中借助数组进行存储，我们首先认识一下数组的存储。 数组 数组是由 n（n &gt;= 1）个相同类型的数据元素构成的有限序列，每个数据元素称为一个数组元素，每个元素在 n 个线性关系中的序号称为该元素的下标，下标的取值范围称为数组的边界。数组是线性表的推广，一维数组可视为一个线性表，二维数组可视为其元素也是定长线性表的线性表，以此类推。并且数组一点定义，其维数和维界就不会改变，因此，除结构的初始化和销毁操作外，数组只会有存取和修改元素的操作。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/computer-basis/ads/data-structure/arrays-materices.html"}],["meta",{"property":"og:site_name","content":"Baicheng's Blog"}],["meta",{"property":"og:title","content":"数组和特殊矩阵"}],["meta",{"property":"og:description","content":"数组和特殊矩阵 矩阵在数据结构中考虑的是如何用最小的内存空间来存储同样的一组数据，所以我们应该把精力放在如何将矩阵更有效的存储在内存中，并能更方便的提取矩阵中的元素。通常矩阵在计算机语言中借助数组进行存储，我们首先认识一下数组的存储。 数组 数组是由 n（n &gt;= 1）个相同类型的数据元素构成的有限序列，每个数据元素称为一个数组元素，每个元素在 n 个线性关系中的序号称为该元素的下标，下标的取值范围称为数组的边界。数组是线性表的推广，一维数组可视为一个线性表，二维数组可视为其元素也是定长线性表的线性表，以此类推。并且数组一点定义，其维数和维界就不会改变，因此，除结构的初始化和销毁操作外，数组只会有存取和修改元素的操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-05T12:57:57.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"arrays"}],["meta",{"property":"article:tag","content":"matrices"}],["meta",{"property":"article:modified_time","content":"2023-08-05T12:57:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组和特殊矩阵\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-05T12:57:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"特殊矩阵","slug":"特殊矩阵","link":"#特殊矩阵","children":[{"level":3,"title":"对称矩阵","slug":"对称矩阵","link":"#对称矩阵","children":[]},{"level":3,"title":"三角矩阵","slug":"三角矩阵","link":"#三角矩阵","children":[]},{"level":3,"title":"三对角矩阵","slug":"三对角矩阵","link":"#三对角矩阵","children":[]}]},{"level":2,"title":"稀疏矩阵","slug":"稀疏矩阵","link":"#稀疏矩阵","children":[]}],"git":{"createdTime":1691238438000,"updatedTime":1691240277000,"contributors":[{"name":"songbaicheng","email":"2524218694@qq.com","commits":2}]},"readingTime":{"minutes":4.22,"words":1266},"filePathRelative":"study/computer-basis/ads/data-structure/arrays-materices.md","localizedDate":"2023年8月5日","excerpt":"<h1> 数组和特殊矩阵</h1>\\n<p>矩阵在数据结构中考虑的是如何用最小的内存空间来存储同样的一组数据，所以我们应该把精力放在如何将矩阵更有效的存储在内存中，并能更方便的提取矩阵中的元素。通常矩阵在计算机语言中借助数组进行存储，我们首先认识一下数组的存储。</p>\\n<h2> 数组</h2>\\n<p>数组是由 n（n &gt;= 1）个相同类型的数据元素构成的有限序列，每个数据元素称为一个数组元素，每个元素在 n 个线性关系中的序号称为该元素的下标，下标的取值范围称为数组的边界。数组是线性表的推广，一维数组可视为一个线性表，二维数组可视为其元素也是定长线性表的线性表，以此类推。并且数组一点定义，其维数和维界就不会改变，因此，除结构的初始化和销毁操作外，数组只会有存取和修改元素的操作。</p>","autoDesc":true}`);export{t as data};
