import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as u,e as a,n as i,g as r,w as e,b as n,d as s,a as k}from"./app-7fe0bd69.js";const d={},m=n("h1",{id:"pytorch",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pytorch","aria-hidden":"true"},"#"),s(" PyTorch")],-1),b=n("p",null,"Pytorch 是一个开源的机器学习库，主要用于深度学习和自然语言处理。它提供了丰富的API和工具来构建、训练和部署神经网络模型。",-1),v=n("h2",{id:"安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),h=n("p",null,[s("使用 PyTorch 之前必须有 Python 环境，为了多个 Python 环境适应不同框架，建议使用 Anaconda 来安装 Python，类似于 NVM 一样管理本地的"),n("br"),s(" Python 环境。")],-1),y=n("p",null,"比如这次我们要使用 PyTorch 2.6.0 版本，在 Anaconda 中新建一个环境安装 Python 3.12 与 PyTorch 。",-1),f=k(`<p>安装下载的时候如果 pip 速度太低可能会超时，可以尝试使用清华镜像源。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>pip3 install torch torchvision torchaudio -i https://mirrors.aliyun.com/pypi/simple/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常用库函数" tabindex="-1"><a class="header-anchor" href="#常用库函数" aria-hidden="true">#</a> 常用库函数</h2><h3 id="dataset-dataloader" tabindex="-1"><a class="header-anchor" href="#dataset-dataloader" aria-hidden="true">#</a> DataSet &amp; DataLoader</h3>`,4),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" PIL "),n("span",{class:"token keyword"},"import"),s(` Image
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("utils"),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token keyword"},"import"),s(` Dataset
`),n("span",{class:"token keyword"},"import"),s(` os


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyDataset"),n("span",{class:"token punctuation"},"("),s("Dataset"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token triple-quoted-string string"},`"""
    Custom dataset class for loading images and labels from a directory.
    """`),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__init__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root_dir"),n("span",{class:"token punctuation"},","),s(" label_name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token triple-quoted-string string"},`"""
        Constructor for MyDataset class.
        :param root_dir: 图片库地址
        :param label_name: 图片标签对应名称
        """`),s(`
        self`),n("span",{class:"token punctuation"},"."),s("root_dir "),n("span",{class:"token operator"},"="),s(` root_dir
        self`),n("span",{class:"token punctuation"},"."),s("label_name "),n("span",{class:"token operator"},"="),s(` label_name
        self`),n("span",{class:"token punctuation"},"."),s("path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},"("),s("os"),n("span",{class:"token punctuation"},"."),s("path"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("root_dir"),n("span",{class:"token punctuation"},","),s(" self"),n("span",{class:"token punctuation"},"."),s("label_name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("images "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("f "),n("span",{class:"token keyword"},"for"),s(" f "),n("span",{class:"token keyword"},"in"),s(" os"),n("span",{class:"token punctuation"},"."),s("listdir"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("path"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"if"),s(" f"),n("span",{class:"token punctuation"},"."),s("endswith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'jpg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'png'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__getitem__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" index"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token triple-quoted-string string"},`"""
        Returns an image at the given index.
        :param index: int 图片对应下标
        :return: tuple (image, label)
        """`),s(`
        `),n("span",{class:"token keyword"},"try"),n("span",{class:"token punctuation"},":"),s(`
            img_name `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("images"),n("span",{class:"token punctuation"},"["),s("index"),n("span",{class:"token punctuation"},"]"),s(`
            img_item_path `),n("span",{class:"token operator"},"="),s(" os"),n("span",{class:"token punctuation"},"."),s("path"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("path"),n("span",{class:"token punctuation"},","),s(" img_name"),n("span",{class:"token punctuation"},")"),s(`
            image `),n("span",{class:"token operator"},"="),s(" Image"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"open"),n("span",{class:"token punctuation"},"("),s("img_item_path"),n("span",{class:"token punctuation"},")"),s(`
            label `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("label_name  "),n("span",{class:"token comment"},"# 假设每个文件夹是一个标签"),s(`
            `),n("span",{class:"token keyword"},"return"),s(" image"),n("span",{class:"token punctuation"},","),s(` label
        `),n("span",{class:"token keyword"},"except"),s(" IndexError"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"Error: Index '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("index"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," is out of bounds. Valid range is 0 to "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("images"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"None"),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__len__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token triple-quoted-string string"},`"""
        Returns the number of images in the dataset.
        :return: int 图片数量
        """`),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("images"),n("span",{class:"token punctuation"},")"),s(`


`),n("span",{class:"token comment"},"# 数据集路径"),s(`
dataset_dir `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'images/HearthStone'"),s(`

`),n("span",{class:"token comment"},"# 定义数据集"),s(`
druid_dataset `),n("span",{class:"token operator"},"="),s(" MyDataset"),n("span",{class:"token punctuation"},"("),s("dataset_dir"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Druid'"),n("span",{class:"token punctuation"},")"),s(`
shaman_dataset `),n("span",{class:"token operator"},"="),s(" MyDataset"),n("span",{class:"token punctuation"},"("),s("dataset_dir"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Shaman'"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 获取不同数据集的内容"),s(`
druid_dataset`),n("span",{class:"token punctuation"},"."),s("__getitem__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("druid_dataset"),n("span",{class:"token punctuation"},"."),s("__getitem__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("druid_dataset"),n("span",{class:"token punctuation"},"."),s("__len__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
shaman_dataset`),n("span",{class:"token punctuation"},"."),s("__getitem__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("show"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("shaman_dataset"),n("span",{class:"token punctuation"},"."),s("__len__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` torchvision
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("utils"),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token keyword"},"import"),s(` DataLoader
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("utils"),n("span",{class:"token punctuation"},"."),s("tensorboard "),n("span",{class:"token keyword"},"import"),s(` SummaryWriter

`),n("span",{class:"token comment"},"# Download the CIFAR10 dataset"),s(`
test_set `),n("span",{class:"token operator"},"="),s(" torchvision"),n("span",{class:"token punctuation"},"."),s("datasets"),n("span",{class:"token punctuation"},"."),s("CIFAR10"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'./dataset'"),n("span",{class:"token punctuation"},","),s(" train"),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"False"),n("span",{class:"token punctuation"},","),s(" transform"),n("span",{class:"token operator"},"="),s("torchvision"),n("span",{class:"token punctuation"},"."),s("transforms"),n("span",{class:"token punctuation"},"."),s("ToTensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                                        download`),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"True"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 展示"),s(`
test_loader `),n("span",{class:"token operator"},"="),s(" DataLoader"),n("span",{class:"token punctuation"},"("),s("test_set"),n("span",{class:"token punctuation"},","),s(" batch_size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"64"),n("span",{class:"token punctuation"},","),s(" shuffle"),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"False"),n("span",{class:"token punctuation"},","),s(" num_workers"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
writer `),n("span",{class:"token operator"},"="),s(" SummaryWriter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'runs/cifar10'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"for"),s(" i"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("images"),n("span",{class:"token punctuation"},","),s(" labels"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"enumerate"),n("span",{class:"token punctuation"},"("),s("test_loader"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    writer`),n("span",{class:"token punctuation"},"."),s("add_images"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'test_dataloader_set'"),n("span",{class:"token punctuation"},","),s(" images"),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("h3",{id:"自定义神经网络",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义神经网络","aria-hidden":"true"},"#"),s(" 自定义神经网络")],-1),E=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` torch
`),n("span",{class:"token keyword"},"from"),s(" torch "),n("span",{class:"token keyword"},"import"),s(` nn


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AddNeuralNetwork"),n("span",{class:"token punctuation"},"("),s("nn"),n("span",{class:"token punctuation"},"."),s("Module"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__init__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token builtin"},"super"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("__init__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("x "),n("span",{class:"token operator"},"="),s(` x

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"forward"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" self"),n("span",{class:"token punctuation"},"."),s("x "),n("span",{class:"token operator"},"+"),s(` x


addNeuralNetwork `),n("span",{class:"token operator"},"="),s(" AddNeuralNetwork"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1.0"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("addNeuralNetwork"),n("span",{class:"token punctuation"},"("),s("torch"),n("span",{class:"token punctuation"},"."),s("tensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5.0"),n("span",{class:"token punctuation"},","),s(" dtype"),n("span",{class:"token operator"},"="),s("torch"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"float"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("h3",{id:"卷积与池化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#卷积与池化","aria-hidden":"true"},"#"),s(" 卷积与池化")],-1),B=n("p",null,[s("卷积：卷积层是深度学习中常用的操作，用于提取图像中的特征。它通过滑动一个小的矩阵（称为过滤器或核）在输入数据上执行点乘和求和的操作来工作。"),n("br"),s(" 池化：池化层通常用于减少数据的维度，同时保留最重要的信息。类似于二向箔的概念，将高纬度的数据提取成低纬度数据。")],-1),A=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(` torch
`),n("span",{class:"token keyword"},"import"),s(` torchvision
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("nn "),n("span",{class:"token keyword"},"import"),s(" Module"),n("span",{class:"token punctuation"},","),s(" Conv2d"),n("span",{class:"token punctuation"},","),s(" MaxPool2d"),n("span",{class:"token punctuation"},","),s(" Linear"),n("span",{class:"token punctuation"},","),s(` Flatten
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("utils"),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token keyword"},"import"),s(` DataLoader
`),n("span",{class:"token keyword"},"from"),s(" torch"),n("span",{class:"token punctuation"},"."),s("utils"),n("span",{class:"token punctuation"},"."),s("tensorboard "),n("span",{class:"token keyword"},"import"),s(` SummaryWriter

`),n("span",{class:"token comment"},"# 下载CIFAR10数据集"),s(`
test_set `),n("span",{class:"token operator"},"="),s(" torchvision"),n("span",{class:"token punctuation"},"."),s("datasets"),n("span",{class:"token punctuation"},"."),s("CIFAR10"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'./dataset'"),n("span",{class:"token punctuation"},","),s(" train"),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"False"),n("span",{class:"token punctuation"},","),s(" transform"),n("span",{class:"token operator"},"="),s("torchvision"),n("span",{class:"token punctuation"},"."),s("transforms"),n("span",{class:"token punctuation"},"."),s("ToTensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                                        download`),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"True"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 创建数据加载器"),s(`
test_loader `),n("span",{class:"token operator"},"="),s(" DataLoader"),n("span",{class:"token punctuation"},"("),s("test_set"),n("span",{class:"token punctuation"},","),s(" batch_size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),s(`


`),n("span",{class:"token comment"},"# 定义优化后的网络"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Net"),n("span",{class:"token punctuation"},"("),s("Module"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__init__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token builtin"},"super"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("__init__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# 第一层卷积，保持输入尺寸"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("conv1 "),n("span",{class:"token operator"},"="),s(" Conv2d"),n("span",{class:"token punctuation"},"("),s("in_channels"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" out_channels"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},","),s(" kernel_size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" stride"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" padding"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# 第二层卷积，池化减小尺寸"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("conv2 "),n("span",{class:"token operator"},"="),s(" Conv2d"),n("span",{class:"token punctuation"},"("),s("in_channels"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},","),s(" out_channels"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"64"),n("span",{class:"token punctuation"},","),s(" kernel_size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" stride"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" padding"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# 池化层，减少图像大小"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("pool "),n("span",{class:"token operator"},"="),s(" MaxPool2d"),n("span",{class:"token punctuation"},"("),s("kernel_size"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(" stride"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(" padding"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# 全连接层，用于分类"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("fc1 "),n("span",{class:"token operator"},"="),s(" Linear"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"64"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"8"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 假设输入为32x32，经过两次池化后，大小为8x8"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("fc2 "),n("span",{class:"token operator"},"="),s(" Linear"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# CIFAR-10有10个类别"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("flatten "),n("span",{class:"token operator"},"="),s(" Flatten"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 将特征图展平为一维"),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"forward"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 前向传播"),s(`
        x `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("pool"),n("span",{class:"token punctuation"},"("),s("torch"),n("span",{class:"token punctuation"},"."),s("relu"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("conv1"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 第一卷积层 + 激活 + 池化"),s(`
        x `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("pool"),n("span",{class:"token punctuation"},"("),s("torch"),n("span",{class:"token punctuation"},"."),s("relu"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("conv2"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 第二卷积层 + 激活 + 池化"),s(`
        x `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("flatten"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 展平"),s(`
        x `),n("span",{class:"token operator"},"="),s(" torch"),n("span",{class:"token punctuation"},"."),s("relu"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},"."),s("fc1"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 全连接层 + 激活"),s(`
        x `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("fc2"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# 输出层"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` x


`),n("span",{class:"token comment"},"# 初始化网络和TensorBoard"),s(`
net `),n("span",{class:"token operator"},"="),s(" Net"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
writer `),n("span",{class:"token operator"},"="),s(" SummaryWriter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'runs/test'"),n("span",{class:"token punctuation"},")"),s(`
step `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`

`),n("span",{class:"token comment"},"# 记录输入和输出图像以及网络的预测"),s(`
`),n("span",{class:"token keyword"},"for"),s(" data "),n("span",{class:"token keyword"},"in"),s(" test_loader"),n("span",{class:"token punctuation"},":"),s(`
    images`),n("span",{class:"token punctuation"},","),s(" labels "),n("span",{class:"token operator"},"="),s(` data
    outputs `),n("span",{class:"token operator"},"="),s(" net"),n("span",{class:"token punctuation"},"("),s("images"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},"# 将输入图像记录到TensorBoard"),s(`
    writer`),n("span",{class:"token punctuation"},"."),s("add_images"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"net-input"'),n("span",{class:"token punctuation"},","),s(" images"),n("span",{class:"token punctuation"},","),s(" step"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},"# 记录标签的统计信息：例如标签的最大值或最小值"),s(`
    writer`),n("span",{class:"token punctuation"},"."),s("add_scalar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"net-output-label-max"'),n("span",{class:"token punctuation"},","),s(" labels"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("item"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" step"),n("span",{class:"token punctuation"},")"),s(`
    writer`),n("span",{class:"token punctuation"},"."),s("add_scalar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"net-output-label-min"'),n("span",{class:"token punctuation"},","),s(" labels"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("item"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" step"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},"# 记录预测的标签（最大值预测的类别）"),s(`
    _`),n("span",{class:"token punctuation"},","),s(" predicted "),n("span",{class:"token operator"},"="),s(" torch"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),s("outputs"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
    writer`),n("span",{class:"token punctuation"},"."),s("add_scalar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"net-predicted-label-max"'),n("span",{class:"token punctuation"},","),s(" predicted"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("item"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" step"),n("span",{class:"token punctuation"},")"),s(`

    step `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`

`),n("span",{class:"token comment"},"# 关闭TensorBoard的writer"),s(`
writer`),n("span",{class:"token punctuation"},"."),s("close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`


`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function D(N,z){const c=o("VPCard"),t=o("CodeDemo");return p(),u("div",null,[m,b,v,h,y,a(c,i(r({title:"Pytorch 官网",desc:"点击跳转 Pytorch 查看详细内容",logo:"/assets/images/ai/llm/pytorch/logo-icon.svg",link:"https://pytorch.org/",color:"rgba(173, 216, 590, 0.15)"})),null,16),f,a(t,{id:"code-demo-26",type:"normal",title:"%E5%AE%9A%E4%B9%89%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86%E3%80%82",code:"eJyNVN1KG0EUfpVDvEgCdqu9DHhVCxXaUir0xkgY3UkysjuzzM5WRQQL1iCtVWgrRVvoRaFQqHpVjYU8TTbRt+iZmd1ks2mKG8juzHznO9/5mbNVCDZVU/BCpVCXwofnC0+A+YGQChZ80qBVbraVkKtNJ1LMCx2XKJJi5vE7pKrKk7UIq1z/Vj0ShvB0MzkvJe9ypcoBn2rB/Mz3wyhU6EGzIgKsZV1I8ARxGW+gK9QRAuEueGSFeniqJRFwmaSrqGzTGWW1K5fWoVZjnKlarRRSrz4NUghVQ6tpS1TjxKeppLwsI03wUMlI+zCKBvFYlYlb/VQCIok/cFCB+LTT32/F1x/iLxfx150x5FBAiu19a/V/deLzdnz9MT466P+4mCxMh+OkzmBu4DeHGDpBzHCRQwVENfEcIy2J0KycNcG4ydnAyXSesVzO0SRlmoOluklWHRjHfnA8FioksHSavQwMEQ7lbrjOVLNUKq4FjeI0FAPeKJbLy6MFbFDFFPUHNWTcpRv/K9oLqiLJdb/YzgGiQDUpNNgrilvafLxwZruCL5VWztShe/UWy5JBS0NeARUFHoWScZB0UyYfeUlKbmYE64f5jbQumeQtGRmYgDzUZCCp03iN9BITk1BmdFhznYM5e5sdEVCOqjOMObgJJVWV6R+Ygvh16+as0zs/7F797B23un9+x9/bvc/n3asdvWPad5TMZstKSLI0BNCNVRrglNEhP5JSyFyKAonVKNWrBXtogbBlUrQNLAQR4bypw4qIsJMceEk85oIkHMPF0xmcWbDlYbiZBJfhHsxuVwu5oBOdzwRHmfp/tAWRJGm/u/Sd7jUe+StUanXJrcCroPeTIZftv7Sjhq3X+3Rx2zqc7ChRmw/NDt4pQPPewdnt6d7N5Xnc2a3yxGkyKooWfv8xJVI1FxVGW7SG8dlJt70/MEdDGTG3lg7mucw4z1DivZ3XuCIKCJvEJ/wOFosGqE2045v3l/HhcffqID56N3DfP9mN997EZ+2cDic7EmZnykszy07YFOslJLMtMxmO6NnliThbZj3XRuMYoXjwD4dj8CFTYfsvoJ2eQQ=="},{default:e(()=>[_]),_:1}),a(t,{id:"code-demo-29",type:"normal",title:"%E4%BD%BF%E7%94%A8%20DataLoader%20%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E3%80%82",code:"eJyNkMFKw0AQhl9lqIckENIWxEMhB7EUBE9a8BII22ZiFpPdMjOxVPExfANfwKvvI76Gm2yiFTy4p93Zf/755n+a7A5SWTNZTHSzsyQglrbVg2ZtTWZKso2vJK3ompNCiYJBuXT3K6sKpD+EgoYtbayiYtTftE2j6HBLWrqWzJzA0u5N7SxAKoSLy9X59XwG3QxGyYwgS+5ukB5T9QyuysnQEJK1kgbJdPgIYhBS2qQrVTP2D8OlpSY9dvmucrK26542jOLMwD9PMaCna2ox8ut8vL18vr4P4N0nkmP/ySkcN4pho2Rb5awfMT07jYGrtixrHJFN2+R7S/dInM6c+b7PzHn9yjAMqDU83epS0XwWOJ3bB3QMoW7UHXIMtdpgzRFoA+g8kZSgh/B00cIv7P0TVRS5bw2DXtUl6pUdtQt2NNZu2OT5CwNvyeY="},{default:e(()=>[g]),_:1}),w,a(t,{id:"code-demo-35",type:"normal",title:"%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%BF%E6%80%A7%E5%8A%A0%E6%B3%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C",code:"eJxtUEtqAzEMvYqYlU2DSRfdBLLoAZoTGAYTy2SoIxlZQyaU3r1OphNCEmkj9D566KcrZz0wdZtuOBYWBWXZHzwl4eM8wz9A5K+9z6FW+Ixxh6OEvEM9sXwbIvfFccxoN56gVcQEfT/QoH1vKua0gmnBLlXHgmKsu3HsHdboboItTJeLi1tiOQWJr8wEdRRadG+zzlN4SNkcn4K/u3W7XGQgNY98c/2AU6TKYj7cegVRzwW38z5lDmptk3vqfv8AYXNwhA=="},{default:e(()=>[E]),_:1}),x,B,a(t,{id:"code-demo-44",type:"normal",title:"%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BA%BF%E6%80%A7%E5%8A%A0%E6%B3%95%E7%9A%84%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C",code:"eJyVVd1OG0cUfpWRc8G6WRzbpBGK5Is2FVKlpKpapN5YshbvElZdz1qz4+C0qgQ0gAnmtyVtgbRQhYJaIEZJVWMb+2V21uaKV+iZmfWyNkQJBkv7c+b7mTnn8/eR/FM6YePI/YiZy9uEImqT7EQah++emI5p4zQeJ3ZOPolhjPyKR7ZesAwVPbDxk6Suokda8UvbtvjlQxMbGlHRiKVRavQCFKhpOTFdo1oX6DO4fmhrukGuKYTljk3GbI3o3fqvC7mcRp5+Q0zKl6TxLeRWFztnZw8+H/nkq0Tc26h4S8fnW3NpTA2HZhyDolTYkGCHp07MX6EQ26apgdgd/8WAiijRTJwa0SwHLMINdsZtkkuFUYKnTmzUHhU6laiaxugDP7o9iS3wnRolBSMqjbDSFqvXpAP2fAdMsd8OfB+81iBg5XLDlK5BFY1pNDuRcczvjFQiHhdwAvB40z1dcBu/svILtrrc3nzWPltr17fTOGtpjoO+MKgiTzJ6X0rXjXGUyZjYpJmM4hjWePcF/ziFPLBGY0EBEHXf3ULtw0O3OsVOZtjSf+391xeNstt66ZWnO82f2Oweq9TY62oIC7BjWeieBHiSXaSYOJOd0DA2LCc1pCK7QEP3SRV9axC4ljbhvUOJqYNhFeU1XTfx41TiiqBaOSzIO9nhOzG/wirw/w5ByXcIAgE9iu7dvbEin/9kBrQIFWtsq8l+XGGv9kFRn5Y8zBNICSZLCZOBGJ8Mrrpk/OAvydjsQaf1u7e8J/naPx+4tWVWmmuf1PuYxrP8EOTcKvfuoo/QMP+q6ONEMiqgpuc7x015kG61NpQsDiU5ZH2l05p3q6+8w13f2uoytybsQOFwcfgKFd9enwrgVZSICwoxjIMwv9sLibhb/RtUstI//atlpACCHy6KlFeZay+csuY0382TDXb6BrihF9v1t3wOun0N0zoJSSLaWkXFcGcDxsISW11zGzve+tHl8yJQBYehyGgihlUQGLJ9lWI0KlT4/S96DbYc3UZea8p7W+cXYnNuApvsgYUuvhGsv0+AIayJLekt6+eEFuCM/X0TsF1HkuUi+QreGPM1KL+sIgYtEIyKQRKVXrL9RVArA4itl2VmfsqzPQ0DxVOaxxG08KTIdrjvyXplgBSwc4dn3gAUOdTIQ0lcwneOK+xsw0+a9bIvSMyWW99jK88lLQTg+Z/PvH8X4bfGJkj+DmEUCli/J8yc9thwVGRpYzDqwMNL5SvIgHyB8mcgWpGFInD9PqrM+TIEuxTGSpUeu7xUuozB6GYkiJKOAOKgiQE+HVEDDdxpiEAiejvz7aMmD/T6H53jXbe1601Dwm26zUX210zw1tue4sM41fBKL/g1xN5U4wq/k9UsGEfJL/0NCueDOa3IpchtiMEdpD8sy8FPXVfXh2OZOIxlwvD2Y/V6lEfFXQg7F41SYCd4JWPiorEgl2YgDImhm1lq6EGXc9n+qUHcvEdysLx3B4LH12+CxBQ9eTuFEn7Pz745/+UodPCgV9J2ezyWtWzH4D3P/yI//A95qvau"},{default:e(()=>[A]),_:1})])}const T=l(d,[["render",D],["__file","pytorch.html.vue"]]);export{T as default};
