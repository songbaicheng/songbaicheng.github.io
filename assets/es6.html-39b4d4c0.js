const n=JSON.parse('{"key":"v-f82974ac","path":"/study/frontend/language/es6.html","title":"ECMAScript 6.0","lang":"zh-CN","frontmatter":{"star":true,"category":"前端","tag":["ES6"],"description":"ECMAScript 6.0 知识总览 快速开始 ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。当然新版本的出现就是为了解决旧版本的一些问题，不过更新之后感觉 JS 更像 Java 了，哈哈哈，只能说语言之间相互取其精华，去其糟粕。话不多说直接开始。 let 与 const let：声明的变量只在 let 命令所在的代码块内有效，不支持变量提升，并且只能声明一次。 // 输出十个 10 for (var i = 0; i &lt; 10; i++) { setTimeout(function(){ console.log(i); }) } // 输出 0123456789 for (let j = 0; j &lt; 10; j++) { setTimeout(function(){ console.log(j); }) }","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/frontend/language/es6.html"}],["meta",{"property":"og:site_name","content":"宋柏成的技术博客"}],["meta",{"property":"og:title","content":"ECMAScript 6.0"}],["meta",{"property":"og:description","content":"ECMAScript 6.0 知识总览 快速开始 ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。当然新版本的出现就是为了解决旧版本的一些问题，不过更新之后感觉 JS 更像 Java 了，哈哈哈，只能说语言之间相互取其精华，去其糟粕。话不多说直接开始。 let 与 const let：声明的变量只在 let 命令所在的代码块内有效，不支持变量提升，并且只能声明一次。 // 输出十个 10 for (var i = 0; i &lt; 10; i++) { setTimeout(function(){ console.log(i); }) } // 输出 0123456789 for (let j = 0; j &lt; 10; j++) { setTimeout(function(){ console.log(j); }) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-06T08:56:50.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"ES6"}],["meta",{"property":"article:modified_time","content":"2023-07-06T08:56:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ECMAScript 6.0\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-06T08:56:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"知识总览","slug":"知识总览","link":"#知识总览","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"let 与 const","slug":"let-与-const","link":"#let-与-const","children":[]},{"level":3,"title":"解构赋值","slug":"解构赋值","link":"#解构赋值","children":[]},{"level":3,"title":"Symbol","slug":"symbol","link":"#symbol","children":[]},{"level":3,"title":"Map 与 Set","slug":"map-与-set","link":"#map-与-set","children":[]}]}],"git":{"createdTime":1688537184000,"updatedTime":1688633810000,"contributors":[{"name":"songbaicheng","email":"2524218694@qq.com","commits":3}]},"readingTime":{"minutes":5.81,"words":1744},"filePathRelative":"study/frontend/language/es6.md","localizedDate":"2023年7月5日","excerpt":"<h1> ECMAScript 6.0</h1>\\n<h2> 知识总览</h2>\\n<h2> 快速开始</h2>\\n<p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。当然新版本的出现就是为了解决旧版本的一些问题，不过更新之后感觉 JS 更像 Java 了，哈哈哈，只能说语言之间相互取其精华，去其糟粕。话不多说直接开始。</p>\\n<h3> let 与 const</h3>\\n<ul>\\n<li>let：声明的变量只在 let 命令所在的代码块内有效，不支持变量提升，并且只能声明一次。</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 输出十个 10</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 输出 0123456789</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>j<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
