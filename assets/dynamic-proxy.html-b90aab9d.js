const e=JSON.parse('{"key":"v-8fb48ca6","path":"/study/backend/java/basic/dynamic-proxy.html","title":"动态代理","lang":"en-US","frontmatter":{"description":"动态代理 引言 今天在复习微服务的时候看到 OpenFeign 使用动态代理集成调用 Ribbon 来实现负载均衡，出于兴趣我就想简单瞥一眼到底是如何调用的，可是结果非常出乎意料，搜索到的结果是：在 OpenFeign 中，Ribbon 的集成是通过使用 Feign 的 Client 接口来实现的。可能那个作者单纯是想延伸一下动态代理这一块的知识，至于到底如何调用的先放在下次再谈，但是动态代理这个知识点必须该梳理梳理了，无论是背面试题还是源码当中它都无处不在，什么 jdk 实现和 cjlib 实现，今天都得给我整明白。 走进动态代理","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/backend/java/basic/dynamic-proxy.html"}],["meta",{"property":"og:site_name","content":"宋柏成的技术博客"}],["meta",{"property":"og:title","content":"动态代理"}],["meta",{"property":"og:description","content":"动态代理 引言 今天在复习微服务的时候看到 OpenFeign 使用动态代理集成调用 Ribbon 来实现负载均衡，出于兴趣我就想简单瞥一眼到底是如何调用的，可是结果非常出乎意料，搜索到的结果是：在 OpenFeign 中，Ribbon 的集成是通过使用 Feign 的 Client 接口来实现的。可能那个作者单纯是想延伸一下动态代理这一块的知识，至于到底如何调用的先放在下次再谈，但是动态代理这个知识点必须该梳理梳理了，无论是背面试题还是源码当中它都无处不在，什么 jdk 实现和 cjlib 实现，今天都得给我整明白。 走进动态代理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-02T10:14:38.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:modified_time","content":"2023-06-02T10:14:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动态代理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-02T10:14:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"走进动态代理","slug":"走进动态代理","link":"#走进动态代理","children":[{"level":3,"title":"什么是动态代理","slug":"什么是动态代理","link":"#什么是动态代理","children":[]},{"level":3,"title":"如何实现动态代理","slug":"如何实现动态代理","link":"#如何实现动态代理","children":[]},{"level":3,"title":"基于接口实现动态代理","slug":"基于接口实现动态代理","link":"#基于接口实现动态代理","children":[]},{"level":3,"title":"基于类实现动态代理","slug":"基于类实现动态代理","link":"#基于类实现动态代理","children":[]},{"level":3,"title":"总结和延伸","slug":"总结和延伸","link":"#总结和延伸","children":[]}]}],"git":{"createdTime":1685700878000,"updatedTime":1685700878000,"contributors":[{"name":"songbaicheng","email":"2524218694@qq.com","commits":1}]},"readingTime":{"minutes":8.65,"words":2594},"filePathRelative":"study/backend/java/basic/dynamic-proxy.md","localizedDate":"June 2, 2023","excerpt":"<h1> 动态代理</h1>\\n<h2> 引言</h2>\\n<p>今天在复习微服务的时候看到 OpenFeign 使用动态代理集成调用 Ribbon 来实现负载均衡，出于兴趣我就想简单瞥一眼到底是如何调用的，可是结果非常出乎意料，搜索到的结果是：在 OpenFeign 中，Ribbon 的集成是通过使用 Feign 的 Client 接口来实现的。可能那个作者单纯是想延伸一下动态代理这一块的知识，至于到底如何调用的先放在下次再谈，但是动态代理这个知识点必须该梳理梳理了，无论是背面试题还是源码当中它都无处不在，什么 jdk 实现和 cjlib 实现，今天都得给我整明白。</p>\\n<h2> 走进动态代理</h2>","autoDesc":true}');export{e as data};
