const e=JSON.parse('{"key":"v-d507a44c","path":"/study/backend/java/micro-services/nacos.html","title":"Nacos","lang":"zh-CN","frontmatter":{"star":true,"category":"微服务","tag":["Spring Cloud Alibaba","Java","Nacos"],"description":"Nacos 浅聊微服务配置和注册中心 配置中心 传统的静态配置方式要想修改某个配置只能修改之后重新发布应用，要实现动态性，可以选择使用数据库，通过定时轮询访问数据库来感知配置的变化。轮询频率低感知配置变化的延时就长，轮询频率高，感知配置变化的延时就短，但比较损耗性能，需要在实时性和性能之间做折中。配置中心专门针对这个业务场景，兼顾实时性和一致性来管理动态配置。配置中心兼往往顾了集中管理、动态更新和版本控制等优点。 注册中心 注册中心用于管理和维护微服务的注册信息，包括微服务的网络位置（IP地址和端口）以及其他元数据。每个微服务在启动时向注册中心注册自己的信息，并定期发送心跳以保持活动状态。其他微服务可以通过查询注册中心获取所需服务的信息，从而实现服务的发现和调用。","head":[["meta",{"property":"og:url","content":"https://github.com/songbaicheng/songbaicheng.github.io/study/backend/java/micro-services/nacos.html"}],["meta",{"property":"og:site_name","content":"宋柏成的博客"}],["meta",{"property":"og:title","content":"Nacos"}],["meta",{"property":"og:description","content":"Nacos 浅聊微服务配置和注册中心 配置中心 传统的静态配置方式要想修改某个配置只能修改之后重新发布应用，要实现动态性，可以选择使用数据库，通过定时轮询访问数据库来感知配置的变化。轮询频率低感知配置变化的延时就长，轮询频率高，感知配置变化的延时就短，但比较损耗性能，需要在实时性和性能之间做折中。配置中心专门针对这个业务场景，兼顾实时性和一致性来管理动态配置。配置中心兼往往顾了集中管理、动态更新和版本控制等优点。 注册中心 注册中心用于管理和维护微服务的注册信息，包括微服务的网络位置（IP地址和端口）以及其他元数据。每个微服务在启动时向注册中心注册自己的信息，并定期发送心跳以保持活动状态。其他微服务可以通过查询注册中心获取所需服务的信息，从而实现服务的发现和调用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T05:05:44.000Z"}],["meta",{"property":"article:author","content":"songbaicheng"}],["meta",{"property":"article:tag","content":"Spring Cloud Alibaba"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Nacos"}],["meta",{"property":"article:modified_time","content":"2023-07-02T05:05:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nacos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-02T05:05:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"songbaicheng\\",\\"url\\":\\"https://github.com/songbaicheng\\",\\"email\\":\\"songbaicheng16@163.com\\"}]}"]]},"headers":[{"level":2,"title":"浅聊微服务配置和注册中心","slug":"浅聊微服务配置和注册中心","link":"#浅聊微服务配置和注册中心","children":[{"level":3,"title":"配置中心","slug":"配置中心","link":"#配置中心","children":[]},{"level":3,"title":"注册中心","slug":"注册中心","link":"#注册中心","children":[]},{"level":3,"title":"微服务中的使用","slug":"微服务中的使用","link":"#微服务中的使用","children":[]}]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"Nacos服务端单机模式启动","slug":"nacos服务端单机模式启动","link":"#nacos服务端单机模式启动","children":[]},{"level":3,"title":"Nacos客户端启动后注册","slug":"nacos客户端启动后注册","link":"#nacos客户端启动后注册","children":[]},{"level":3,"title":"Nacos服务端集群模式启动","slug":"nacos服务端集群模式启动","link":"#nacos服务端集群模式启动","children":[]}]}],"git":{"createdTime":1688180572000,"updatedTime":1688274344000,"contributors":[{"name":"songbaicheng","email":"2524218694@qq.com","commits":2}]},"readingTime":{"minutes":6.59,"words":1978},"filePathRelative":"study/backend/java/micro-services/nacos.md","localizedDate":"2023年7月1日","excerpt":"<h1> Nacos</h1>\\n<h2> 浅聊微服务配置和注册中心</h2>\\n<h3> 配置中心</h3>\\n<p>传统的静态配置方式要想修改某个配置只能修改之后重新发布应用，要实现动态性，可以选择使用数据库，通过定时轮询访问数据库来感知配置的变化。轮询频率低感知配置变化的延时就长，轮询频率高，感知配置变化的延时就短，但比较损耗性能，需要在实时性和性能之间做折中。配置中心专门针对这个业务场景，兼顾实时性和一致性来管理动态配置。配置中心兼往往顾了集中管理、动态更新和版本控制等优点。</p>\\n<h3> 注册中心</h3>\\n<p>注册中心用于管理和维护微服务的注册信息，包括微服务的网络位置（IP地址和端口）以及其他元数据。每个微服务在启动时向注册中心注册自己的信息，并定期发送心跳以保持活动状态。其他微服务可以通过查询注册中心获取所需服务的信息，从而实现服务的发现和调用。</p>","autoDesc":true}');export{e as data};
