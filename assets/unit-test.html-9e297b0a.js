import{_ as k}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as d,a as c,w as a,n as m,g as v,e as i,b as n,d as s}from"./app-d4542e9b.js";const b={},g=i('<h1 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h1><blockquote><p>单元测试（Java语言中）是对类中每个方法提供一个或多个测试的一种实践，其目的是为了有规律的测试一个类的各个部分是否具备正确的行为。 ——摘自《Java 编程思想》</p></blockquote><h2 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h2><p>刚开始工作的时候谁写测试类啊，还单元测试呢，测试我都不测试。后来到了正式一些的公司之后，不通过质量门禁则不能上线，所以 JaCoCo 这个开源的单元测试引擎就发挥作用了，它搭配 Sonar 面板可以展示单元测试对代码的覆盖程度、帮助开发团队分析测试覆盖率，并且了解哪些代码已经被测试覆盖，以及哪些代码尚未被测试覆盖。尽管如此，你的测试类还是很难保证你的代码所有逻辑分支都可以覆盖的到，于是 Mock 又出现了，相对于 Junit 它提供了简洁的API，使得在单元测试中创建模拟对象、定义模拟对象的行为以及验证方法的调用变得非常容易。所以我们选择使用 Mock 搭配 JUnit 作为最佳解决方案。</p><h2 id="质量门襟要求" tabindex="-1"><a class="header-anchor" href="#质量门襟要求" aria-hidden="true">#</a> 质量门襟要求</h2><p>除 web 语言之外的所有开发语言在投产时，增量代码单元测试行覆盖率要求 100%，如果在 80% 到 100% 范围，可以进行人工评审环节，评审过后方可通过质量门禁校验。并且单元测试成功率不得低于 100%。</p><h2 id="规范的单元测试" tabindex="-1"><a class="header-anchor" href="#规范的单元测试" aria-hidden="true">#</a> 规范的单元测试</h2><p>单元测试的目的是：提升软件质量、促进代码优化、提升研发效率、增加重构自信。单元测试需要符合两大类原则：FIRST 原则和 AIR 原则。</p><ul><li>FITST原则： <ul><li>快速（Fast）：单元测试能够快速执行。</li><li>隔离（Isolated）：单元测试不要依赖外部环境，如网络、第三方 Web Service 等。</li><li>可重复（Repeatable）：单元测试应该是可以被重复执行的，并且结果是相等的。</li><li>自我验证（Self-verigying）：单元测试应该是用例本身自动校验，不依赖人工验证。</li><li>及时（Timely）：单元测试应该及时进行编写、更新和维护，以保证测试用例可以随着业务代码的变化动态保证质量。</li></ul></li><li>AIR 原则： <ul><li>自动化（Automatic）</li><li>独立性（Independent）</li><li>可重复（Repeatable）</li></ul></li></ul><h3 id="屏蔽内容限制" tabindex="-1"><a class="header-anchor" href="#屏蔽内容限制" aria-hidden="true">#</a> 屏蔽内容限制</h3><p>不包含逻辑处理的代码可屏蔽：</p><ul><li>实体类（DTO、Entity、VO）。</li><li>框架自动生成代码，如 Mapper、实体类等。</li><li>枚举类。</li></ul><h3 id="用例强制要求" tabindex="-1"><a class="header-anchor" href="#用例强制要求" aria-hidden="true">#</a> 用例强制要求</h3><ul><li>测试用例必须增加断言逻辑，避免恒真，用例需要保持结果准确性校验，用例执行结果必须能根据代码变化而反映出变化。</li><li>单元测试需要尽可能的覆盖函数的所有范围，针对代码执行成功、失败、异常三种情况编写不同的用例。</li><li>保证单元测试的独立性。</li><li>单元测试是可重复执行的。</li><li>测试力度足够小，可以精确定位问题。</li></ul><h3 id="用例建议要求" tabindex="-1"><a class="header-anchor" href="#用例建议要求" aria-hidden="true">#</a> 用例建议要求</h3><ul><li>不建议调用数据库，外部接口，建议使用Mock</li><li>不建议启动 Spring 容器。</li><li>测试用例均需需为 public void。</li><li>单元测试包结构和源码结构尽量保持一致。</li><li>单元测试文件名称是由被”测试文件 + Test“ 组成</li></ul><h2 id="单元测试用例思路" tabindex="-1"><a class="header-anchor" href="#单元测试用例思路" aria-hidden="true">#</a> 单元测试用例思路</h2><p>以目标类或类中的某一个函数为单元体，通过构造尽可能覆盖所有的单数范围的不同入参对其进行调用，对比返回值是否到达预期，从而验证函数逻辑的正确性。</p><p>当然存在被测试类A调用其他类B的函数，为了控制A中的代码逻辑，需要控制B对象函数的返回值，可以根据如下考虑：</p><table><thead><tr><th>B对象来源</th><th>场景</th><th style="text-align:center;">A对象是否需哟啊提前给B赋值</th><th style="text-align:center;">赋值方式</th><th style="text-align:center;">是否需要Mock函数</th></tr></thead><tbody><tr><td>静态类</td><td>静态类初始化或其函数调用过程中，不依赖环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">不涉及</td><td style="text-align:center;">不涉及</td><td style="text-align:center;">不需要</td></tr><tr><td>静态类</td><td>静态类初始化或其函数调用过程中，依赖了环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">不涉及</td><td style="text-align:center;">不涉及</td><td style="text-align:center;">需要</td></tr><tr><td>new 所得</td><td>静态类初始化或其函数调用过程中，不依赖环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">不需要</td><td style="text-align:center;">不涉及</td><td style="text-align:center;">不需要</td></tr><tr><td>new 所得</td><td>静态类初始化或其函数调用过程中，依赖了环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">需要</td><td style="text-align:center;">Mock whenNew</td><td style="text-align:center;">需要</td></tr><tr><td>A的public方法传入</td><td>静态类初始化或其函数调用过程中，不依赖环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">需要</td><td style="text-align:center;">public方法</td><td style="text-align:center;">不需要</td></tr><tr><td>A的public方法传入</td><td>静态类初始化或其函数调用过程中，依赖了环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">需要</td><td style="text-align:center;">public方法</td><td style="text-align:center;">需要</td></tr><tr><td>Spring注解</td><td>静态类初始化或其函数调用过程中，不依赖环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">需要</td><td style="text-align:center;">public 方法</td><td style="text-align:center;">需要</td></tr><tr><td>Spring注解</td><td>静态类初始化或其函数调用过程中，依赖了环境信息（API调用、DB调用、磁盘读取等）</td><td style="text-align:center;">需要</td><td style="text-align:center;">Mock 注解</td><td style="text-align:center;">需要</td></tr></tbody></table><h2 id="mock" tabindex="-1"><a class="header-anchor" href="#mock" aria-hidden="true">#</a> Mock</h2><p>Mock 是在测试过程中对于一些不容易构造获取的对象，创建一个Mock对象来模拟对象的行为。基本原理就是先模拟对象，然后声明行为，最后执行验证，通过Mock能力控制代码路径，跳过外部依赖，实现分支覆盖。</p><p>Mock 框架目前也有很多版本，有如下几种：</p><ul><li>Easy Mock：一套通过简单方法对于给定的接口生成 Mock 对象的类库，它提供接口的模拟，能够通过录制、回放、检查三步来完成大体流程，可以令Mock对象返回指定的值或者抛出指定异常。</li><li>JMock：基于Java开发，大大简化了虚拟对象的使用。</li><li>Mockito：可读性强，验证语法简单，可以与JUnit无缝结合，是最广泛的Mock框架。</li><li>PowerMock：Mockito增强版，弥补了对静态方法的不支持。</li></ul><table><thead><tr><th></th><th style="text-align:center;">Easy Mcok</th><th style="text-align:center;">JMock</th><th style="text-align:center;">Mockito</th><th style="text-align:center;">PowerMock</th></tr></thead><tbody><tr><td>final 方法</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td>私有方法</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td></tr><tr><td>静态方法</td><td style="text-align:center;">不支持</td><td style="text-align:center;">不支持</td><td style="text-align:center;">支持</td><td style="text-align:center;">支持</td></tr><tr><td>SpringBoot依赖</td><td style="text-align:center;">复杂</td><td style="text-align:center;">复杂</td><td style="text-align:center;">默认依赖</td><td style="text-align:center;">基于 Mocktio 拓展</td></tr><tr><td>API风格</td><td style="text-align:center;">略复杂</td><td style="text-align:center;">略复杂</td><td style="text-align:center;">简单</td><td style="text-align:center;">简单</td></tr></tbody></table><h2 id="mock-单元测试实践" tabindex="-1"><a class="header-anchor" href="#mock-单元测试实践" aria-hidden="true">#</a> Mock 单元测试实践</h2><h3 id="mockito" tabindex="-1"><a class="header-anchor" href="#mockito" aria-hidden="true">#</a> Mockito</h3><h4 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h4>',28),h=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.mockito"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("mockito-core"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("scope")]),n("span",{class:"token punctuation"},">")]),s("test"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("scope")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-gradle line-numbers-mode","data-ext":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[s("testImplementation "),n("span",{class:"token string"},"'org.mockito:mockito-core:<version>'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=n("h4",{id:"测试代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#测试代码","aria-hidden":"true"},"#"),s(" 测试代码")],-1),w=n("p",null,"Mockito 与多种测试框架（如JUnit、TestNG）和依赖注入框架（如Spring）完美集成，所以我们就用最常用的 Spring Boot 代码进行测试。",-1),U=n("p",null,"首先我们先准备好要测试的方法类，内容也是非常的简单，无非是包含了关于用户的 crud 功能。",-1),x=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Builder"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" username"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Repository"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"User"),s(" user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Service"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserService"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(" userMapper"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"User"),s(" user"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        userMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        userMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("p",null,"接下来就是写测试类了，我们这里需要依赖 Spring 容器测试，所以我们结合 @SpringBootTest 启动，而具体的测试方法也根据",-1),B=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootTest"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserServiceTest"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@MockBean"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"IUserMapper"),s(" userMapper"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"UserService"),s(" userService"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" expectedUsers "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),s(`
              `),n("span",{class:"token class-name"},"UserVo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"builder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"username"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"zhangsan"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
              `),n("span",{class:"token class-name"},"UserVo"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"builder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"username"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"lisi"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),s("expectedUsers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" actualUsers "),n("span",{class:"token operator"},"="),s(" userService"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),s("expectedUsers"),n("span",{class:"token punctuation"},","),s(" actualUsers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAllUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetUserById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"User"),s(" expectedUser "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),s("expectedUser"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"User"),s(" actualUser "),n("span",{class:"token operator"},"="),s(" userService"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),s("expectedUser"),n("span",{class:"token punctuation"},","),s(" actualUser"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testSaveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"User"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testDeleteUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        
        userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"deleteUser"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetUserById_NonExistingUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" userId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"1"'),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"thenReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token function"},"assertThrows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"UserNotFoundException"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
            userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUserById"),n("span",{class:"token punctuation"},"("),s("userId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testSaveUser_NullUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"assertThrows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IllegalArgumentException"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
            userService`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"verify"),n("span",{class:"token punctuation"},"("),s("userMapper"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Mockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"never"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ArgumentMatchers"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"any"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=i(`<h4 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法" aria-hidden="true">#</a> 常用方法</h4><h5 id="mock-class-t-classtomock" tabindex="-1"><a class="header-anchor" href="#mock-class-t-classtomock" aria-hidden="true">#</a> mock(Class&lt;<em>T</em>&gt; classToMock)</h5><p>创建一个模拟对象，用于代替真实对象的行为。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserService</span> userServiceMock <span class="token operator">=</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="when-mock-method-thenreturn-value" tabindex="-1"><a class="header-anchor" href="#when-mock-method-thenreturn-value" aria-hidden="true">#</a> when(mock.method()).thenReturn(value)</h5><p>定义模拟对象方法的行为，指定当调用方法时应该返回的值。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 定义当调用 getUserById 方法并传入参数 1 时，返回一个名为 &quot;zhangsan&quot; 的 User 对象</span>
<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token class-name">UserVo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="verify-mock-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-method" aria-hidden="true">#</a> verify(mock).method()</h5><p>验证模拟对象的方法是否被调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法是否被调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="verify-mock-times-n-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-times-n-method" aria-hidden="true">#</a> verify(mock, times(n)).method()</h5><p>验证模拟对象的方法被调用了特定的次数（n）。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法被调用了2次</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">times</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="verify-mock-atleast-n-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-atleast-n-method" aria-hidden="true">#</a> verify(mock, atLeast(n)).method()</h5><p>验证模拟对象的方法被调用了至少n次。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 getUserById 方法被调用了至少3次</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">atLeast</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="verify-mock-never-method" tabindex="-1"><a class="header-anchor" href="#verify-mock-never-method" aria-hidden="true">#</a> verify(mock, never()).method()</h5><p>验证模拟对象的方法从未被调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 addUser 方法从未被调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">,</span> <span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">never</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="verifynomoreinteractions-mock" tabindex="-1"><a class="header-anchor" href="#verifynomoreinteractions-mock" aria-hidden="true">#</a> verifyNoMoreInteractions(mock)</h5><p>验证模拟对象上的所有方法已经被验证，并且没有其他未验证的方法调用。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 验证 userServiceMock 上的所有方法已经被验证，并且没有其他未验证的方法调用</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">verifyNoMoreInteractions</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dothrow-exception-when-mock-method" tabindex="-1"><a class="header-anchor" href="#dothrow-exception-when-mock-method" aria-hidden="true">#</a> doThrow(exception).when(mock).method()</h5><p>指定当调用模拟对象的方法时应该抛出的异常。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 指定当调用 deleteUser 方法并传入任何参数时，抛出一个名为&quot;UserNotFoundException&quot;的异常</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">doThrow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserNotFoundException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">anyInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="doanswer-answer-when-mock-method" tabindex="-1"><a class="header-anchor" href="#doanswer-answer-when-mock-method" aria-hidden="true">#</a> doAnswer(answer).when(mock).method()</h5><p>指定模拟对象方法的调用应该如何进行自定义处理，例如执行回调函数或返回动态计算的结果。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 定义当调用 updateUser 方法时，执行自定义的逻辑来修改用户对象</span>
<span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">doAnswer</span><span class="token punctuation">(</span>invocation <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> userToUpdate <span class="token operator">=</span> invocation<span class="token punctuation">.</span><span class="token function">getArgument</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 执行自定义逻辑来更新用户对象</span>
    userToUpdate<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Updated Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userToUpdate<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userServiceMock<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">Mockito</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="powermock" tabindex="-1"><a class="header-anchor" href="#powermock" aria-hidden="true">#</a> PowerMock</h3><h4 id="导入依赖-1" tabindex="-1"><a class="header-anchor" href="#导入依赖-1" aria-hidden="true">#</a> 导入依赖</h4>`,30),j=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.powermock"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("powermock-api-mockito2"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("version")]),n("span",{class:"token punctuation"},">")]),s("2.0.9"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("version")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("scope")]),n("span",{class:"token punctuation"},">")]),s("test"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("scope")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.powermock"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("powermock-module-junit4"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("version")]),n("span",{class:"token punctuation"},">")]),s("2.0.9"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("version")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("scope")]),n("span",{class:"token punctuation"},">")]),s("test"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("scope")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("div",{class:"language-gradle line-numbers-mode","data-ext":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[s("    testImplementation "),n("span",{class:"token string"},"'org.powermock:powermock-api-mockito2:2.0.9'"),s(`
    testImplementation `),n("span",{class:"token string"},"'org.powermock:powermock-module-junit4:2.0.9'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("h4",{id:"测试代码-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#测试代码-1","aria-hidden":"true"},"#"),s(" 测试代码")],-1),D=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"UUID")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * @ClassName TestClass
 * @Description 测试 PowerMock 类
 */`),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"TestClass"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"getUUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token constant"},"UUID"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"randomUUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"soutArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(),n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("sbc"),n("span",{class:"token punctuation"},"."),s("unittest")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("junit"),n("span",{class:"token punctuation"},"."),s("jupiter"),n("span",{class:"token punctuation"},"."),s("api"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Test")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("junit"),n("span",{class:"token punctuation"},"."),s("runner"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"RunWith")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("powermock"),n("span",{class:"token punctuation"},"."),s("api"),n("span",{class:"token punctuation"},"."),s("mockito"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"PowerMockito")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("powermock"),n("span",{class:"token punctuation"},"."),s("core"),n("span",{class:"token punctuation"},"."),s("classloader"),n("span",{class:"token punctuation"},"."),s("annotations"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"PrepareForTest")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("powermock"),n("span",{class:"token punctuation"},"."),s("modules"),n("span",{class:"token punctuation"},"."),s("junit4"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"PowerMockRunner")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"UUID")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token import static"},[n("span",{class:"token namespace"},[s("org"),n("span",{class:"token punctuation"},"."),s("junit"),n("span",{class:"token punctuation"},"."),s("jupiter"),n("span",{class:"token punctuation"},"."),s("api"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Assertions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token static"},"assertEquals")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * @ClassName TestClassTest
 * @Description powermock 测试类
 * @Author songbaicheng
 * @Date 2023/8/14 12:09
 */`),s(`
`),n("span",{class:"token annotation punctuation"},"@RunWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"PowerMockRunner"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@PrepareForTest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"TestClass"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"UUID"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"TestClassTest"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testGetUUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`

        `),n("span",{class:"token class-name"},"PowerMockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"mockStatic"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"UUID"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"PowerMockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"UUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0L"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0L"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"UUID"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"randomUUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},"TestClass"),s(" testClass "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TestClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" uuid "),n("span",{class:"token operator"},"="),s(" testClass"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getUUID"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//        PowerMockito.verifyStatic(UUID.class);"),s(`

        `),n("span",{class:"token function"},"assertEquals"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"00000000-0000-0000-0000-000000000000"'),n("span",{class:"token punctuation"},","),s(" uuid"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"testSoutArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"TestClass"),s(" testClass "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"PowerMockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"spy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TestClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},"List"),s(" mockIntegers "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"PowerMockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"mock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"PowerMockito"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doReturn"),n("span",{class:"token punctuation"},"("),s("mockIntegers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"when"),n("span",{class:"token punctuation"},"("),s("testClass"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"soutArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        testClass`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"soutArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("h2",{id:"总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),s(" 总结")],-1),C=n("p",null,"Mockito 还提供了其他一些高级功能和方法，例如参数匹配、顺序验证、超时验证等，如果想了解更多可以查阅下面的 Mockito的官方文档。",-1);function V(E,q){const p=l("CodeTabs"),o=l("CodeDemo"),u=l("VPCard");return r(),d("div",null,[g,c(p,{id:"481",data:[{id:"Maven"},{id:"Gradle"}]},{title0:a(({value:t,isActive:e})=>[s("Maven")]),title1:a(({value:t,isActive:e})=>[s("Gradle")]),tab0:a(({value:t,isActive:e})=>[h]),tab1:a(({value:t,isActive:e})=>[y]),_:1}),f,w,U,c(o,{id:"code-demo-498",type:"normal",title:"%E5%BE%85%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95",code:"eJyFjk0KgzAQRq8yuLKbHqAtRbsT2pV05yY1g6SEKPkrRbx7HSMSQeoQyIS8ed/0yZt5lpySrETtRY2V6txLihpqyYyBp0E9/0BfqUrBWFnubPsRGnl4d1p4ZhEKoh+s61CDW9pzgGY0yO/C2AvRV2jQ5lJSb9IDZRBGpdE6rSLRcYXO2mHDTgR56b59C56WVgvVgOD7AcvMCP+J8K3gYJhH4tMpkDwrfyReyAna83KUaAO/vXlkjtjVxuNJhh/z/p0V"},{default:a(()=>[x,M,I]),_:1}),S,c(o,{id:"code-demo-506",type:"normal",title:"%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%BB%A3%E7%A0%81",code:"eJytVU2P0zAQ/StRTolUIsGRj9W2oqAi2gNdOFVamWRoDV672E7asup/Z8ZJE6ebpgSwKtWxZ57nvTdOHsPvrGDhy/B2udVcridK2TswdiVTwYwJPhvQS9AFT4GWg8eVXMkAx+1cpT8mwKpHTC6YhWBGCXO23YIO8nr6qsoZ51btuIasneQd4pKqOWZVeWVFNC0UzwKLj+/BjoWgTBPFVBbt0vjIjX1N6zcB7LeQWshcVPAmGGvNDiZhhmKiJqUcFPVFJV9zLjLQUZxQKZI9QLQKf22YXBskG8YJz3DhOc1caBSPhiAJbniN8qIbJa70otHMSHBuVbLbgIwabZO1r0ScWNz+BDbXMmrx7wb11GKpzVmJg1p5PrRP6ITBVgFtpz8RwLSPHfm4fvKJTgGafzt4hOLO847lX29DUMbkMEMx/YZYWmpsR2iWITNnnlcIZbVaBWMk7Ny6K2uWjTDpg9qQ/UOtqWsqkS4b1I3s6mkUfGrMOf4we3x3/tycC2detWjJCnCqtvxxvAjJ192ZdE12XwpzwqbFfpc6SHVmX+XzFgTYDkbXOq6bQdag9XnZw+IiwpDLc79QcrrH1wJS+Bdqf3snZC5EXxffbbTamYgwFsq+U7nMpvsUtpYrmbiP1ijAmp/d+GWfa91/cY6Dlf8Pl+J+gcSfCt4iPRMC1kyM9Tp/AGmH8677/FzloZRH9ZYE3KQPT419Km/ObLrBd3jC5AEDGkHwFx5/A2b1qCc="},{default:a(()=>[B]),_:1}),A,c(p,{id:"581",data:[{id:"Maven"},{id:"Gradle"}]},{title0:a(({value:t,isActive:e})=>[s("Maven")]),title1:a(({value:t,isActive:e})=>[s("Gradle")]),tab0:a(({value:t,isActive:e})=>[j]),tab1:a(({value:t,isActive:e})=>[T]),_:1}),_,c(o,{id:"code-demo-592",type:"normal",title:"%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%BB%A3%E7%A0%81",code:"eJyNU91u0zAYfRUrV0lV3KzsAoYmtWIDTSpoWpm4yY2bmNRbYgf/tFRVn4BrngNxwRXvAzwG/uw0P7SbZlXRl/h8x+ecz90Gd2RFgrOgIuk9ySlKRYnVIsWGM62p0q8SnnBWVkJqJGSO72DDPiumqcSkYviDRx1gpOHcQm4M/8j0so+oxJrKUqT3jgEKpgW+hq/v/MtD+FRIitOCKFUIkoEEzoUmmgmu8LWkFZH0jZCHolqKUmSmoMrLPG1PtUqt4K5hyAYbzQo8Y12+9vvt7dVFt0OBlPSBpKZKUemVWv22vPxsSKFc/2gwSDgaoMlr8PaelBSBB/cGhd+8oCqVrAIO1BhCv39+/fv9258fvzxoavRSSKQEzxeEpUvK87qbaIrG8fj56MXo5BSdjM/il7AzSvikHlP4Xxo+6sgC+tmG20adhwwRROHrncW7om8BbcEosmtSO7KrMovCBrYSLENw395SDURhhPRSirVCl19S6g037bC6d8VdoLlLPmxVRDbXo+hM3FBtJA85XTvVYTwbongWRXhtw/IUkvBMlF4KMLVcjSen11fnCLianbB79lxLxnNkjHV43vbgfO/Uz390VOuKSvZpc9Rbe0L3MoVJENfr2ZHHfiXB0CnaC909YTRzYfRUSrKxw7GzeDyPngtVbVzYnYD6DuDvhWCKV1zTnMoDBtgLAfXU2XbJ6rk28iKsWis9He10+og6IvsLdv8AKtLLMg=="},{default:a(()=>[D,P]),_:1}),R,C,c(u,m(v({title:"Mockito 官网文档",desc:"点击跳转官网查看详细内容",logo:"/assets/images/work-task/development/mockito/mockito.png",link:"https://site.mockito.org/",color:"rgba(173, 216, 590, 0.15)"})),null,16)])}const K=k(b,[["render",V],["__file","unit-test.html.vue"]]);export{K as default};
